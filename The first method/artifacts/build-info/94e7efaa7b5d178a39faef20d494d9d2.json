{
	"id": "94e7efaa7b5d178a39faef20d494d9d2",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.3",
	"solcLongVersion": "0.8.3+commit.8d00100c",
	"input": {
		"language": "Solidity",
		"sources": {
			"TOkenAERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/ERC20.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\";\r\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\r\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\";\r\n\r\ncontract TOkenAERC20 is Context, IERC20, IERC20Metadata {\r\n    mapping(address => uint256) private _balances;\r\n\r\n    mapping(address => mapping(address => uint256)) private _allowances;\r\n\r\n    uint256 private _totalSupply;\r\n\r\n    string private _name;\r\n    string private _symbol;\r\n    address public _owner;\r\n\r\n    /**\r\n     * @dev Sets the values for {name} and {symbol}.\r\n     *\r\n     * All two of these values are immutable: they can only be set once during\r\n     * construction.\r\n     */\r\n    constructor() {\r\n        _name = \"Test_uniswap_TokenA\";\r\n        _symbol = \"TUA\";\r\n        _owner=msg.sender;\r\n        _totalSupply=10000000;\r\n        _balances[_owner]=_totalSupply;\r\n\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() public view virtual override returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token, usually a shorter version of the\r\n     * name.\r\n     */\r\n    function symbol() public view virtual override returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of decimals used to get its user representation.\r\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\r\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\r\n     *\r\n     * Tokens usually opt for a value of 18, imitating the relationship between\r\n     * Ether and Wei. This is the default value returned by this function, unless\r\n     * it's overridden.\r\n     *\r\n     * NOTE: This information is only used for _display_ purposes: it in\r\n     * no way affects any of the arithmetic of the contract, including\r\n     * {IERC20-balanceOf} and {IERC20-transfer}.\r\n     */\r\n    function decimals() public view virtual override returns (uint8) {\r\n        return 18;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-totalSupply}.\r\n     */\r\n    function totalSupply() public view virtual override returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-balanceOf}.\r\n     */\r\n    function balanceOf(address account) public view virtual override returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transfer}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - the caller must have a balance of at least `amount`.\r\n     */\r\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\r\n        address owner = _msgSender();\r\n        _transfer(owner, to, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-allowance}.\r\n     */\r\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-approve}.\r\n     *\r\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\r\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\r\n        address owner = tx.origin;\r\n        _approve(owner, spender, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transferFrom}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance. This is not\r\n     * required by the EIP. See the note at the beginning of {ERC20}.\r\n     *\r\n     * NOTE: Does not update the allowance if the current allowance\r\n     * is the maximum `uint256`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` and `to` cannot be the zero address.\r\n     * - `from` must have a balance of at least `amount`.\r\n     * - the caller must have allowance for ``from``'s tokens of at least\r\n     * `amount`.\r\n     */\r\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\r\n        address spender = _msgSender();\r\n        _spendAllowance(from, spender, amount);\r\n        _transfer(from, to, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\r\n     *\r\n     * This is an alternative to {approve} that can be used as a mitigation for\r\n     * problems described in {IERC20-approve}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r\n        address owner = _msgSender();\r\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\r\n     *\r\n     * This is an alternative to {approve} that can be used as a mitigation for\r\n     * problems described in {IERC20-approve}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     * - `spender` must have allowance for the caller of at least\r\n     * `subtractedValue`.\r\n     */\r\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r\n        address owner = _msgSender();\r\n        uint256 currentAllowance = allowance(owner, spender);\r\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\r\n        unchecked {\r\n            _approve(owner, spender, currentAllowance - subtractedValue);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Moves `amount` of tokens from `from` to `to`.\r\n     *\r\n     * This internal function is equivalent to {transfer}, and can be used to\r\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `from` must have a balance of at least `amount`.\r\n     */\r\n    function _transfer(address from, address to, uint256 amount) internal virtual {\r\n        require(from != address(0), \"ERC20: transfer from the zero address\");\r\n        require(to != address(0), \"ERC20: transfer to the zero address\");\r\n\r\n        _beforeTokenTransfer(from, to, amount);\r\n\r\n        uint256 fromBalance = _balances[from];\r\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\r\n        unchecked {\r\n            _balances[from] = fromBalance - amount;\r\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\r\n            // decrementing then incrementing.\r\n            _balances[to] += amount;\r\n        }\r\n\r\n        emit Transfer(from, to, amount);\r\n\r\n        _afterTokenTransfer(from, to, amount);\r\n    }\r\n\r\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\r\n     * the total supply.\r\n     *\r\n     * Emits a {Transfer} event with `from` set to the zero address.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     */\r\n    function _mint(address account, uint256 amount) internal virtual {\r\n        require(account != address(0), \"ERC20: mint to the zero address\");\r\n\r\n        _beforeTokenTransfer(address(0), account, amount);\r\n\r\n        _totalSupply += amount;\r\n        unchecked {\r\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\r\n            _balances[account] += amount;\r\n        }\r\n        emit Transfer(address(0), account, amount);\r\n\r\n        _afterTokenTransfer(address(0), account, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `amount` tokens from `account`, reducing the\r\n     * total supply.\r\n     *\r\n     * Emits a {Transfer} event with `to` set to the zero address.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     * - `account` must have at least `amount` tokens.\r\n     */\r\n    function _burn(address account, uint256 amount) internal virtual {\r\n        require(account != address(0), \"ERC20: burn from the zero address\");\r\n\r\n        _beforeTokenTransfer(account, address(0), amount);\r\n\r\n        uint256 accountBalance = _balances[account];\r\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\r\n        unchecked {\r\n            _balances[account] = accountBalance - amount;\r\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\r\n            _totalSupply -= amount;\r\n        }\r\n\r\n        emit Transfer(account, address(0), amount);\r\n\r\n        _afterTokenTransfer(account, address(0), amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\r\n     *\r\n     * This internal function is equivalent to `approve`, and can be used to\r\n     * e.g. set automatic allowances for certain subsystems, etc.\r\n     *\r\n     * Emits an {Approval} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `owner` cannot be the zero address.\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\r\n        require(owner != address(0), \"ERC20: approve from the zero address\");\r\n        require(spender != address(0), \"ERC20: approve to the zero address\");\r\n\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\r\n     *\r\n     * Does not update the allowance amount in case of infinite allowance.\r\n     * Revert if not enough allowance is available.\r\n     *\r\n     * Might emit an {Approval} event.\r\n     */\r\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\r\n        uint256 currentAllowance = allowance(owner, spender);\r\n        if (currentAllowance != type(uint256).max) {\r\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\r\n            unchecked {\r\n                _approve(owner, spender, currentAllowance - amount);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Hook that is called before any transfer of tokens. This includes\r\n     * minting and burning.\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\r\n     * will be transferred to `to`.\r\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\r\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\r\n     * - `from` and `to` are never both zero.\r\n     *\r\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\r\n     */\r\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\r\n\r\n    /**\r\n     * @dev Hook that is called after any transfer of tokens. This includes\r\n     * minting and burning.\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\r\n     * has been transferred to `to`.\r\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\r\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\r\n     * - `from` and `to` are never both zero.\r\n     *\r\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\r\n     */\r\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\r\n}"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"TOkenAERC20.sol": {
				"TOkenAERC20": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "_owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"TOkenAERC20.sol\":484:12229  contract TOkenAERC20 is Context, IERC20, IERC20Metadata {\r... */\n  mstore(0x40, 0x80)\n    /* \"TOkenAERC20.sol\":982:1173  constructor() {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"TOkenAERC20.sol\":1007:1036  _name = \"Test_uniswap_TokenA\" */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  swap1\n  swap2\n  mstore\n  0x13\n  dup1\n  dup3\n  mstore\n  0x546573745f756e69737761705f546f6b656e4100000000000000000000000000\n  0x20\n  swap1\n  swap3\n  add\n  swap2\n  dup3\n  mstore\n  tag_4\n  swap2\n    /* \"TOkenAERC20.sol\":1007:1012  _name */\n  0x03\n  swap2\n    /* \"TOkenAERC20.sol\":1007:1036  _name = \"Test_uniswap_TokenA\" */\n  tag_5\n  jump\t// in\ntag_4:\n  pop\n    /* \"TOkenAERC20.sol\":1047:1062  _symbol = \"TUA\" */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  swap1\n  swap2\n  mstore\n  0x03\n  dup1\n  dup3\n  mstore\n  shl(0xe8, 0x545541)\n  0x20\n  swap1\n  swap3\n  add\n  swap2\n  dup3\n  mstore\n  tag_6\n  swap2\n    /* \"TOkenAERC20.sol\":1047:1054  _symbol */\n  0x04\n  swap2\n    /* \"TOkenAERC20.sol\":1047:1062  _symbol = \"TUA\" */\n  tag_5\n  jump\t// in\ntag_6:\n  pop\n    /* \"TOkenAERC20.sol\":1073:1079  _owner */\n  0x05\n    /* \"TOkenAERC20.sol\":1073:1090  _owner=msg.sender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"TOkenAERC20.sol\":1080:1090  msg.sender */\n  caller\n    /* \"TOkenAERC20.sol\":1073:1090  _owner=msg.sender */\n  swap1\n  dup2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"TOkenAERC20.sol\":1114:1122  10000000 */\n  0x989680\n    /* \"TOkenAERC20.sol\":1101:1113  _totalSupply */\n  0x02\n    /* \"TOkenAERC20.sol\":1101:1122  _totalSupply=10000000 */\n  dup2\n  swap1\n  sstore\n    /* \"TOkenAERC20.sol\":1073:1079  _owner */\n  0x00\n    /* \"TOkenAERC20.sol\":1133:1150  _balances[_owner] */\n  swap2\n  dup3\n  mstore\n  0x20\n  dup3\n  swap1\n  mstore\n  0x40\n  swap1\n  swap2\n  keccak256\n    /* \"TOkenAERC20.sol\":1133:1163  _balances[_owner]=_totalSupply */\n  sstore\n    /* \"TOkenAERC20.sol\":484:12229  contract TOkenAERC20 is Context, IERC20, IERC20Metadata {\r... */\n  jump(tag_19)\ntag_5:\n  dup3\n  dup1\n  sload\n  tag_8\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_11\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_14)\ntag_11:\n  dup3\n  0x1f\n  lt\n  tag_12\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_14)\ntag_12:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_14\n  jumpi\n  swap2\n  dup3\n  add\ntag_13:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_14\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_13)\ntag_14:\n  pop\n  tag_15\n  swap3\n  swap2\n  pop\n  tag_16\n  jump\t// in\ntag_15:\n  pop\n  swap1\n  jump\t// out\ntag_16:\ntag_17:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_15\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_17)\n    /* \"#utility.yul\":14:394   */\ntag_9:\n    /* \"#utility.yul\":93:94   */\n  0x01\n    /* \"#utility.yul\":89:101   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":136:148   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":157:159   */\n  tag_21\n  jumpi\n    /* \"#utility.yul\":211:215   */\n  0x7f\n    /* \"#utility.yul\":203:209   */\n  dup3\n    /* \"#utility.yul\":199:216   */\n  and\n    /* \"#utility.yul\":189:216   */\n  swap2\n  pop\n    /* \"#utility.yul\":157:159   */\ntag_21:\n    /* \"#utility.yul\":264:266   */\n  0x20\n    /* \"#utility.yul\":256:262   */\n  dup3\n    /* \"#utility.yul\":253:267   */\n  lt\n    /* \"#utility.yul\":233:251   */\n  dup2\n    /* \"#utility.yul\":230:268   */\n  eq\n    /* \"#utility.yul\":227:229   */\n  iszero\n  tag_22\n  jumpi\n    /* \"#utility.yul\":310:320   */\n  0x4e487b71\n    /* \"#utility.yul\":305:308   */\n  0xe0\n    /* \"#utility.yul\":301:321   */\n  shl\n    /* \"#utility.yul\":298:299   */\n  0x00\n    /* \"#utility.yul\":291:322   */\n  mstore\n    /* \"#utility.yul\":345:349   */\n  0x22\n    /* \"#utility.yul\":342:343   */\n  0x04\n    /* \"#utility.yul\":335:350   */\n  mstore\n    /* \"#utility.yul\":373:377   */\n  0x24\n    /* \"#utility.yul\":370:371   */\n  0x00\n    /* \"#utility.yul\":363:378   */\n  revert\n    /* \"#utility.yul\":227:229   */\ntag_22:\n  pop\n    /* \"#utility.yul\":69:394   */\n  swap2\n  swap1\n  pop\n  jump\t// out\ntag_19:\n    /* \"TOkenAERC20.sol\":484:12229  contract TOkenAERC20 is Context, IERC20, IERC20Metadata {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"TOkenAERC20.sol\":484:12229  contract TOkenAERC20 is Context, IERC20, IERC20Metadata {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_15\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xb2bdfa7b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_15:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"TOkenAERC20.sol\":1243:1343  function name() public view virtual override returns (string memory) {\r... */\n    tag_3:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TOkenAERC20.sol\":3603:3801  function approve(address spender, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_4:\n      tag_20\n      tag_21\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n        /* \"#utility.yul\":1653:1667   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1646:1668   */\n      iszero\n        /* \"#utility.yul\":1628:1669   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1616:1618   */\n      0x20\n        /* \"#utility.yul\":1601:1619   */\n      add\n        /* \"TOkenAERC20.sol\":3603:3801  function approve(address spender, uint256 amount) public virtual override returns (bool) {\r... */\n      tag_18\n        /* \"#utility.yul\":1583:1675   */\n      jump\n        /* \"TOkenAERC20.sol\":2372:2480  function totalSupply() public view virtual override returns (uint256) {\r... */\n    tag_5:\n        /* \"TOkenAERC20.sol\":2460:2472  _totalSupply */\n      sload(0x02)\n        /* \"TOkenAERC20.sol\":2372:2480  function totalSupply() public view virtual override returns (uint256) {\r... */\n    tag_26:\n      mload(0x40)\n        /* \"#utility.yul\":5223:5248   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":5211:5213   */\n      0x20\n        /* \"#utility.yul\":5196:5214   */\n      add\n        /* \"TOkenAERC20.sol\":2372:2480  function totalSupply() public view virtual override returns (uint256) {\r... */\n      tag_18\n        /* \"#utility.yul\":5178:5254   */\n      jump\n        /* \"TOkenAERC20.sol\":4381:4642  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_6:\n      tag_20\n      tag_31\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n        /* \"TOkenAERC20.sol\":2214:2307  function decimals() public view virtual override returns (uint8) {\r... */\n    tag_7:\n      mload(0x40)\n        /* \"TOkenAERC20.sol\":2297:2299  18 */\n      0x12\n        /* \"#utility.yul\":5401:5437   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5389:5391   */\n      0x20\n        /* \"#utility.yul\":5374:5392   */\n      add\n        /* \"TOkenAERC20.sol\":2214:2307  function decimals() public view virtual override returns (uint8) {\r... */\n      tag_18\n        /* \"#utility.yul\":5356:5443   */\n      jump\n        /* \"TOkenAERC20.sol\":5051:5289  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r... */\n    tag_8:\n      tag_20\n      tag_40\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_40:\n      tag_41\n      jump\t// in\n        /* \"TOkenAERC20.sol\":2543:2670  function balanceOf(address account) public view virtual override returns (uint256) {\r... */\n    tag_9:\n      tag_26\n      tag_44\n      calldatasize\n      0x04\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n        /* \"TOkenAERC20.sol\":1462:1566  function symbol() public view virtual override returns (string memory) {\r... */\n    tag_10:\n      tag_16\n      tag_49\n      jump\t// in\n        /* \"TOkenAERC20.sol\":5792:6228  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r... */\n    tag_11:\n      tag_20\n      tag_52\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n        /* \"TOkenAERC20.sol\":2876:3069  function transfer(address to, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_12:\n      tag_20\n      tag_56\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_56:\n      tag_57\n      jump\t// in\n        /* \"TOkenAERC20.sol\":770:791  address public _owner */\n    tag_13:\n      sload(0x05)\n      tag_59\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_59:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1444:1476   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1426:1477   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1414:1416   */\n      0x20\n        /* \"#utility.yul\":1399:1417   */\n      add\n        /* \"TOkenAERC20.sol\":770:791  address public _owner */\n      tag_18\n        /* \"#utility.yul\":1381:1483   */\n      jump\n        /* \"TOkenAERC20.sol\":3132:3283  function allowance(address owner, address spender) public view virtual override returns (uint256) {\r... */\n    tag_14:\n      tag_26\n      tag_64\n      calldatasize\n      0x04\n      tag_65\n      jump\t// in\n    tag_64:\n      tag_66\n      jump\t// in\n        /* \"TOkenAERC20.sol\":1243:1343  function name() public view virtual override returns (string memory) {\r... */\n    tag_17:\n        /* \"TOkenAERC20.sol\":1297:1310  string memory */\n      0x60\n        /* \"TOkenAERC20.sol\":1330:1335  _name */\n      0x03\n        /* \"TOkenAERC20.sol\":1323:1335  return _name */\n      dup1\n      sload\n      tag_69\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_71\n      swap1\n      tag_70\n      jump\t// in\n    tag_71:\n      dup1\n      iszero\n      tag_72\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_73\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_72)\n    tag_73:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_74:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_74\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_72:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"TOkenAERC20.sol\":1243:1343  function name() public view virtual override returns (string memory) {\r... */\n      swap1\n      jump\t// out\n        /* \"TOkenAERC20.sol\":3603:3801  function approve(address spender, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_23:\n        /* \"TOkenAERC20.sol\":3686:3690  bool */\n      0x00\n        /* \"TOkenAERC20.sol\":3719:3728  tx.origin */\n      origin\n        /* \"TOkenAERC20.sol\":3739:3771  _approve(owner, spender, amount) */\n      tag_76\n        /* \"TOkenAERC20.sol\":3719:3728  tx.origin */\n      dup2\n        /* \"TOkenAERC20.sol\":3755:3762  spender */\n      dup6\n        /* \"TOkenAERC20.sol\":3764:3770  amount */\n      dup6\n        /* \"TOkenAERC20.sol\":3739:3747  _approve */\n      tag_77\n        /* \"TOkenAERC20.sol\":3739:3771  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_76:\n      pop\n        /* \"TOkenAERC20.sol\":3789:3793  true */\n      0x01\n      swap4\n        /* \"TOkenAERC20.sol\":3603:3801  function approve(address spender, uint256 amount) public virtual override returns (bool) {\r... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"TOkenAERC20.sol\":4381:4642  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_33:\n        /* \"TOkenAERC20.sol\":4478:4482  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"TOkenAERC20.sol\":4536:4574  _spendAllowance(from, spender, amount) */\n      tag_82\n        /* \"TOkenAERC20.sol\":4552:4556  from */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"TOkenAERC20.sol\":4567:4573  amount */\n      dup6\n        /* \"TOkenAERC20.sol\":4536:4551  _spendAllowance */\n      tag_83\n        /* \"TOkenAERC20.sol\":4536:4574  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_82:\n        /* \"TOkenAERC20.sol\":4585:4612  _transfer(from, to, amount) */\n      tag_84\n        /* \"TOkenAERC20.sol\":4595:4599  from */\n      dup6\n        /* \"TOkenAERC20.sol\":4601:4603  to */\n      dup6\n        /* \"TOkenAERC20.sol\":4605:4611  amount */\n      dup6\n        /* \"TOkenAERC20.sol\":4585:4594  _transfer */\n      tag_85\n        /* \"TOkenAERC20.sol\":4585:4612  _transfer(from, to, amount) */\n      jump\t// in\n    tag_84:\n      pop\n        /* \"TOkenAERC20.sol\":4630:4634  true */\n      0x01\n      swap5\n        /* \"TOkenAERC20.sol\":4381:4642  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\r... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"TOkenAERC20.sol\":5051:5289  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r... */\n    tag_41:\n        /* \"TOkenAERC20.sol\":5139:5143  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"TOkenAERC20.sol\":5195:5259  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_76\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"TOkenAERC20.sol\":5211:5218  spender */\n      dup6\n        /* \"TOkenAERC20.sol\":5248:5258  addedValue */\n      dup6\n        /* \"TOkenAERC20.sol\":5220:5245  allowance(owner, spender) */\n      tag_90\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup4\n        /* \"TOkenAERC20.sol\":5211:5218  spender */\n      dup4\n        /* \"TOkenAERC20.sol\":5220:5229  allowance */\n      tag_66\n        /* \"TOkenAERC20.sol\":5220:5245  allowance(owner, spender) */\n      jump\t// in\n    tag_90:\n        /* \"TOkenAERC20.sol\":5220:5258  allowance(owner, spender) + addedValue */\n      tag_91\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n        /* \"TOkenAERC20.sol\":5195:5203  _approve */\n      tag_77\n        /* \"TOkenAERC20.sol\":5195:5259  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"TOkenAERC20.sol\":2543:2670  function balanceOf(address account) public view virtual override returns (uint256) {\r... */\n    tag_46:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TOkenAERC20.sol\":2644:2662  _balances[account] */\n      dup2\n      and\n        /* \"TOkenAERC20.sol\":2617:2624  uint256 */\n      0x00\n        /* \"TOkenAERC20.sol\":2644:2662  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"TOkenAERC20.sol\":2543:2670  function balanceOf(address account) public view virtual override returns (uint256) {\r... */\n    tag_93:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"TOkenAERC20.sol\":1462:1566  function symbol() public view virtual override returns (string memory) {\r... */\n    tag_49:\n        /* \"TOkenAERC20.sol\":1518:1531  string memory */\n      0x60\n        /* \"TOkenAERC20.sol\":1551:1558  _symbol */\n      0x04\n        /* \"TOkenAERC20.sol\":1544:1558  return _symbol */\n      dup1\n      sload\n      tag_69\n      swap1\n      tag_70\n      jump\t// in\n        /* \"TOkenAERC20.sol\":5792:6228  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r... */\n    tag_53:\n        /* \"TOkenAERC20.sol\":5885:5889  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"TOkenAERC20.sol\":5885:5889  bool */\n      dup2\n        /* \"TOkenAERC20.sol\":5968:5993  allowance(owner, spender) */\n      tag_102\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"TOkenAERC20.sol\":5985:5992  spender */\n      dup7\n        /* \"TOkenAERC20.sol\":5968:5977  allowance */\n      tag_66\n        /* \"TOkenAERC20.sol\":5968:5993  allowance(owner, spender) */\n      jump\t// in\n    tag_102:\n        /* \"TOkenAERC20.sol\":5941:5993  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"TOkenAERC20.sol\":6032:6047  subtractedValue */\n      dup4\n        /* \"TOkenAERC20.sol\":6012:6028  currentAllowance */\n      dup2\n        /* \"TOkenAERC20.sol\":6012:6047  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"TOkenAERC20.sol\":6004:6089  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_103\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4873:4875   */\n      0x20\n        /* \"TOkenAERC20.sol\":6004:6089  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4855:4876   */\n      mstore\n        /* \"#utility.yul\":4912:4914   */\n      0x25\n        /* \"#utility.yul\":4892:4910   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4885:4915   */\n      mstore\n        /* \"#utility.yul\":4951:4985   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":4931:4949   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4924:4986   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":5002:5020   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4995:5030   */\n      mstore\n        /* \"#utility.yul\":5047:5066   */\n      0x84\n      add\n        /* \"TOkenAERC20.sol\":6004:6089  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_104:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_103:\n        /* \"TOkenAERC20.sol\":6125:6185  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_84\n        /* \"TOkenAERC20.sol\":6134:6139  owner */\n      dup3\n        /* \"TOkenAERC20.sol\":6141:6148  spender */\n      dup7\n        /* \"TOkenAERC20.sol\":6169:6184  subtractedValue */\n      dup7\n        /* \"TOkenAERC20.sol\":6150:6166  currentAllowance */\n      dup5\n        /* \"TOkenAERC20.sol\":6150:6184  currentAllowance - subtractedValue */\n      sub\n        /* \"TOkenAERC20.sol\":6125:6133  _approve */\n      tag_77\n        /* \"TOkenAERC20.sol\":6125:6185  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"TOkenAERC20.sol\":2876:3069  function transfer(address to, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_57:\n        /* \"TOkenAERC20.sol\":2955:2959  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"TOkenAERC20.sol\":3011:3039  _transfer(owner, to, amount) */\n      tag_76\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"TOkenAERC20.sol\":3028:3030  to */\n      dup6\n        /* \"TOkenAERC20.sol\":3032:3038  amount */\n      dup6\n        /* \"TOkenAERC20.sol\":3011:3020  _transfer */\n      tag_85\n        /* \"TOkenAERC20.sol\":3011:3039  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"TOkenAERC20.sol\":3132:3283  function allowance(address owner, address spender) public view virtual override returns (uint256) {\r... */\n    tag_66:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TOkenAERC20.sol\":3248:3266  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"TOkenAERC20.sol\":3221:3228  uint256 */\n      0x00\n        /* \"TOkenAERC20.sol\":3248:3266  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"TOkenAERC20.sol\":3248:3259  _allowances */\n      0x01\n        /* \"TOkenAERC20.sol\":3248:3266  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"TOkenAERC20.sol\":3248:3275  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"TOkenAERC20.sol\":3132:3283  function allowance(address owner, address spender) public view virtual override returns (uint256) {\r... */\n      jump\t// out\n        /* \"TOkenAERC20.sol\":9785:10131  function _approve(address owner, address spender, uint256 amount) internal virtual {\r... */\n    tag_77:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TOkenAERC20.sol\":9887:9906  owner != address(0) */\n      dup4\n      and\n        /* \"TOkenAERC20.sol\":9879:9947  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4468:4470   */\n      0x20\n        /* \"TOkenAERC20.sol\":9879:9947  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4450:4471   */\n      mstore\n        /* \"#utility.yul\":4507:4509   */\n      0x24\n        /* \"#utility.yul\":4487:4505   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":4480:4510   */\n      mstore\n        /* \"#utility.yul\":4546:4580   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":4526:4544   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4519:4581   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":4597:4615   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4590:4624   */\n      mstore\n        /* \"#utility.yul\":4641:4660   */\n      0x84\n      add\n        /* \"TOkenAERC20.sol\":9879:9947  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_104\n        /* \"#utility.yul\":4440:4666   */\n      jump\n        /* \"TOkenAERC20.sol\":9879:9947  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_112:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TOkenAERC20.sol\":9966:9987  spender != address(0) */\n      dup3\n      and\n        /* \"TOkenAERC20.sol\":9958:10026  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_115\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2894:2896   */\n      0x20\n        /* \"TOkenAERC20.sol\":9958:10026  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2876:2897   */\n      mstore\n        /* \"#utility.yul\":2933:2935   */\n      0x22\n        /* \"#utility.yul\":2913:2931   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2906:2936   */\n      mstore\n        /* \"#utility.yul\":2972:3006   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":2952:2970   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2945:3007   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":3023:3041   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3016:3048   */\n      mstore\n        /* \"#utility.yul\":3065:3084   */\n      0x84\n      add\n        /* \"TOkenAERC20.sol\":9958:10026  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_104\n        /* \"#utility.yul\":2866:3090   */\n      jump\n        /* \"TOkenAERC20.sol\":9958:10026  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_115:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TOkenAERC20.sol\":10039:10057  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"TOkenAERC20.sol\":10039:10050  _allowances */\n      0x01\n        /* \"TOkenAERC20.sol\":10039:10057  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"TOkenAERC20.sol\":10039:10066  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"TOkenAERC20.sol\":10039:10075  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"TOkenAERC20.sol\":10091:10123  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":5223:5248   */\n      dup5\n      dup2\n      mstore\n        /* \"TOkenAERC20.sol\":10091:10123  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":5196:5214   */\n      add\n        /* \"TOkenAERC20.sol\":10091:10123  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"TOkenAERC20.sol\":9785:10131  function _approve(address owner, address spender, uint256 amount) internal virtual {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"TOkenAERC20.sol\":10422:10841  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\r... */\n    tag_83:\n        /* \"TOkenAERC20.sol\":10523:10547  uint256 currentAllowance */\n      0x00\n        /* \"TOkenAERC20.sol\":10550:10575  allowance(owner, spender) */\n      tag_121\n        /* \"TOkenAERC20.sol\":10560:10565  owner */\n      dup5\n        /* \"TOkenAERC20.sol\":10567:10574  spender */\n      dup5\n        /* \"TOkenAERC20.sol\":10550:10559  allowance */\n      tag_66\n        /* \"TOkenAERC20.sol\":10550:10575  allowance(owner, spender) */\n      jump\t// in\n    tag_121:\n        /* \"TOkenAERC20.sol\":10523:10575  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"TOkenAERC20.sol\":10590:10606  currentAllowance */\n      dup2\n        /* \"TOkenAERC20.sol\":10590:10627  currentAllowance != type(uint256).max */\n      eq\n        /* \"TOkenAERC20.sol\":10586:10834  if (currentAllowance != type(uint256).max) {\r... */\n      tag_126\n      jumpi\n        /* \"TOkenAERC20.sol\":10672:10678  amount */\n      dup2\n        /* \"TOkenAERC20.sol\":10652:10668  currentAllowance */\n      dup2\n        /* \"TOkenAERC20.sol\":10652:10678  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"TOkenAERC20.sol\":10644:10712  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_123\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3297:3299   */\n      0x20\n        /* \"TOkenAERC20.sol\":10644:10712  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3279:3300   */\n      mstore\n        /* \"#utility.yul\":3336:3338   */\n      0x1d\n        /* \"#utility.yul\":3316:3334   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3309:3339   */\n      mstore\n        /* \"#utility.yul\":3375:3406   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":3355:3373   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3348:3407   */\n      mstore\n        /* \"#utility.yul\":3424:3442   */\n      0x64\n      add\n        /* \"TOkenAERC20.sol\":10644:10712  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_104\n        /* \"#utility.yul\":3269:3448   */\n      jump\n        /* \"TOkenAERC20.sol\":10644:10712  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_123:\n        /* \"TOkenAERC20.sol\":10756:10807  _approve(owner, spender, currentAllowance - amount) */\n      tag_126\n        /* \"TOkenAERC20.sol\":10765:10770  owner */\n      dup5\n        /* \"TOkenAERC20.sol\":10772:10779  spender */\n      dup5\n        /* \"TOkenAERC20.sol\":10800:10806  amount */\n      dup5\n        /* \"TOkenAERC20.sol\":10781:10797  currentAllowance */\n      dup5\n        /* \"TOkenAERC20.sol\":10781:10806  currentAllowance - amount */\n      sub\n        /* \"TOkenAERC20.sol\":10756:10764  _approve */\n      tag_77\n        /* \"TOkenAERC20.sol\":10756:10807  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_126:\n        /* \"TOkenAERC20.sol\":10422:10841  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\r... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"TOkenAERC20.sol\":6698:7504  function _transfer(address from, address to, uint256 amount) internal virtual {\r... */\n    tag_85:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TOkenAERC20.sol\":6795:6813  from != address(0) */\n      dup4\n      and\n        /* \"TOkenAERC20.sol\":6787:6855  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_128\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4062:4064   */\n      0x20\n        /* \"TOkenAERC20.sol\":6787:6855  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4044:4065   */\n      mstore\n        /* \"#utility.yul\":4101:4103   */\n      0x25\n        /* \"#utility.yul\":4081:4099   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4074:4104   */\n      mstore\n        /* \"#utility.yul\":4140:4174   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":4120:4138   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4113:4175   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":4191:4209   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4184:4219   */\n      mstore\n        /* \"#utility.yul\":4236:4255   */\n      0x84\n      add\n        /* \"TOkenAERC20.sol\":6787:6855  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_104\n        /* \"#utility.yul\":4034:4261   */\n      jump\n        /* \"TOkenAERC20.sol\":6787:6855  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_128:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TOkenAERC20.sol\":6874:6890  to != address(0) */\n      dup3\n      and\n        /* \"TOkenAERC20.sol\":6866:6930  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_131\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2490:2492   */\n      0x20\n        /* \"TOkenAERC20.sol\":6866:6930  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2472:2493   */\n      mstore\n        /* \"#utility.yul\":2529:2531   */\n      0x23\n        /* \"#utility.yul\":2509:2527   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2502:2532   */\n      mstore\n        /* \"#utility.yul\":2568:2602   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":2548:2566   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2541:2603   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":2619:2637   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2612:2645   */\n      mstore\n        /* \"#utility.yul\":2662:2681   */\n      0x84\n      add\n        /* \"TOkenAERC20.sol\":6866:6930  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_104\n        /* \"#utility.yul\":2462:2687   */\n      jump\n        /* \"TOkenAERC20.sol\":6866:6930  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_131:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TOkenAERC20.sol\":7016:7031  _balances[from] */\n      dup4\n      and\n        /* \"TOkenAERC20.sol\":6994:7013  uint256 fromBalance */\n      0x00\n        /* \"TOkenAERC20.sol\":7016:7031  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"TOkenAERC20.sol\":7050:7071  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"TOkenAERC20.sol\":7042:7114  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_136\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3655:3657   */\n      0x20\n        /* \"TOkenAERC20.sol\":7042:7114  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3637:3658   */\n      mstore\n        /* \"#utility.yul\":3694:3696   */\n      0x26\n        /* \"#utility.yul\":3674:3692   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3667:3697   */\n      mstore\n        /* \"#utility.yul\":3733:3767   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":3713:3731   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3706:3768   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":3784:3802   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3777:3813   */\n      mstore\n        /* \"#utility.yul\":3830:3849   */\n      0x84\n      add\n        /* \"TOkenAERC20.sol\":7042:7114  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_104\n        /* \"#utility.yul\":3627:3855   */\n      jump\n        /* \"TOkenAERC20.sol\":7042:7114  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_136:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TOkenAERC20.sol\":7150:7165  _balances[from] */\n      dup5\n      dup2\n      and\n        /* \"TOkenAERC20.sol\":7150:7159  _balances */\n      0x00\n        /* \"TOkenAERC20.sol\":7150:7165  _balances[from] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"TOkenAERC20.sol\":7168:7188  fromBalance - amount */\n      dup8\n      dup8\n      sub\n        /* \"TOkenAERC20.sol\":7150:7188  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"TOkenAERC20.sol\":7368:7381  _balances[to] */\n      swap4\n      dup8\n      and\n      dup1\n      dup4\n      mstore\n      swap2\n      dup5\n      swap1\n      keccak256\n        /* \"TOkenAERC20.sol\":7368:7391  _balances[to] += amount */\n      dup1\n      sload\n      dup8\n      add\n      swap1\n      sstore\n        /* \"TOkenAERC20.sol\":7420:7446  Transfer(from, to, amount) */\n      swap3\n      mload\n        /* \"#utility.yul\":5223:5248   */\n      dup6\n      dup2\n      mstore\n        /* \"TOkenAERC20.sol\":7368:7381  _balances[to] */\n      swap1\n      swap3\n        /* \"TOkenAERC20.sol\":7420:7446  Transfer(from, to, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":5196:5214   */\n      add\n        /* \"TOkenAERC20.sol\":7420:7446  Transfer(from, to, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"TOkenAERC20.sol\":7459:7496  _afterTokenTransfer(from, to, amount) */\n      tag_126\n        /* \"TOkenAERC20.sol\":11441:11532  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {} */\n      jump\n        /* \"#utility.yul\":14:187   */\n    tag_145:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:113   */\n      tag_93\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":192:388   */\n    tag_45:\n      0x00\n        /* \"#utility.yul\":304:306   */\n      0x20\n        /* \"#utility.yul\":292:301   */\n      dup3\n        /* \"#utility.yul\":283:290   */\n      dup5\n        /* \"#utility.yul\":279:302   */\n      sub\n        /* \"#utility.yul\":275:307   */\n      slt\n        /* \"#utility.yul\":272:274   */\n      iszero\n      tag_149\n      jumpi\n        /* \"#utility.yul\":325:331   */\n      dup1\n        /* \"#utility.yul\":317:323   */\n      dup2\n        /* \"#utility.yul\":310:332   */\n      revert\n        /* \"#utility.yul\":272:274   */\n    tag_149:\n        /* \"#utility.yul\":353:382   */\n      tag_150\n        /* \"#utility.yul\":372:381   */\n      dup3\n        /* \"#utility.yul\":353:382   */\n      tag_145\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":343:382   */\n      swap4\n        /* \"#utility.yul\":262:388   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":393:663   */\n    tag_65:\n      0x00\n      dup1\n        /* \"#utility.yul\":522:524   */\n      0x40\n        /* \"#utility.yul\":510:519   */\n      dup4\n        /* \"#utility.yul\":501:508   */\n      dup6\n        /* \"#utility.yul\":497:520   */\n      sub\n        /* \"#utility.yul\":493:525   */\n      slt\n        /* \"#utility.yul\":490:492   */\n      iszero\n      tag_152\n      jumpi\n        /* \"#utility.yul\":543:549   */\n      dup1\n        /* \"#utility.yul\":535:541   */\n      dup2\n        /* \"#utility.yul\":528:550   */\n      revert\n        /* \"#utility.yul\":490:492   */\n    tag_152:\n        /* \"#utility.yul\":571:600   */\n      tag_153\n        /* \"#utility.yul\":590:599   */\n      dup4\n        /* \"#utility.yul\":571:600   */\n      tag_145\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":561:600   */\n      swap2\n      pop\n        /* \"#utility.yul\":619:657   */\n      tag_154\n        /* \"#utility.yul\":653:655   */\n      0x20\n        /* \"#utility.yul\":642:651   */\n      dup5\n        /* \"#utility.yul\":638:656   */\n      add\n        /* \"#utility.yul\":619:657   */\n      tag_145\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":609:657   */\n      swap1\n      pop\n        /* \"#utility.yul\":480:663   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":668:1006   */\n    tag_32:\n      0x00\n      dup1\n      0x00\n        /* \"#utility.yul\":814:816   */\n      0x60\n        /* \"#utility.yul\":802:811   */\n      dup5\n        /* \"#utility.yul\":793:800   */\n      dup7\n        /* \"#utility.yul\":789:812   */\n      sub\n        /* \"#utility.yul\":785:817   */\n      slt\n        /* \"#utility.yul\":782:784   */\n      iszero\n      tag_156\n      jumpi\n        /* \"#utility.yul\":835:841   */\n      dup1\n        /* \"#utility.yul\":827:833   */\n      dup2\n        /* \"#utility.yul\":820:842   */\n      revert\n        /* \"#utility.yul\":782:784   */\n    tag_156:\n        /* \"#utility.yul\":863:892   */\n      tag_157\n        /* \"#utility.yul\":882:891   */\n      dup5\n        /* \"#utility.yul\":863:892   */\n      tag_145\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":853:892   */\n      swap3\n      pop\n        /* \"#utility.yul\":911:949   */\n      tag_158\n        /* \"#utility.yul\":945:947   */\n      0x20\n        /* \"#utility.yul\":934:943   */\n      dup6\n        /* \"#utility.yul\":930:948   */\n      add\n        /* \"#utility.yul\":911:949   */\n      tag_145\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":901:949   */\n      swap2\n      pop\n        /* \"#utility.yul\":996:998   */\n      0x40\n        /* \"#utility.yul\":985:994   */\n      dup5\n        /* \"#utility.yul\":981:999   */\n      add\n        /* \"#utility.yul\":968:1000   */\n      calldataload\n        /* \"#utility.yul\":958:1000   */\n      swap1\n      pop\n        /* \"#utility.yul\":772:1006   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1011:1275   */\n    tag_22:\n      0x00\n      dup1\n        /* \"#utility.yul\":1140:1142   */\n      0x40\n        /* \"#utility.yul\":1128:1137   */\n      dup4\n        /* \"#utility.yul\":1119:1126   */\n      dup6\n        /* \"#utility.yul\":1115:1138   */\n      sub\n        /* \"#utility.yul\":1111:1143   */\n      slt\n        /* \"#utility.yul\":1108:1110   */\n      iszero\n      tag_160\n      jumpi\n        /* \"#utility.yul\":1161:1167   */\n      dup2\n        /* \"#utility.yul\":1153:1159   */\n      dup3\n        /* \"#utility.yul\":1146:1168   */\n      revert\n        /* \"#utility.yul\":1108:1110   */\n    tag_160:\n        /* \"#utility.yul\":1189:1218   */\n      tag_161\n        /* \"#utility.yul\":1208:1217   */\n      dup4\n        /* \"#utility.yul\":1189:1218   */\n      tag_145\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":1179:1218   */\n      swap5\n        /* \"#utility.yul\":1265:1267   */\n      0x20\n        /* \"#utility.yul\":1250:1268   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1237:1269   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1098:1275   */\n      jump\t// out\n        /* \"#utility.yul\":1680:2283   */\n    tag_19:\n      0x00\n        /* \"#utility.yul\":1821:1823   */\n      0x20\n        /* \"#utility.yul\":1850:1852   */\n      dup1\n        /* \"#utility.yul\":1839:1848   */\n      dup4\n        /* \"#utility.yul\":1832:1853   */\n      mstore\n        /* \"#utility.yul\":1882:1888   */\n      dup4\n        /* \"#utility.yul\":1876:1889   */\n      mload\n        /* \"#utility.yul\":1925:1931   */\n      dup1\n        /* \"#utility.yul\":1920:1922   */\n      dup3\n        /* \"#utility.yul\":1909:1918   */\n      dup6\n        /* \"#utility.yul\":1905:1923   */\n      add\n        /* \"#utility.yul\":1898:1932   */\n      mstore\n        /* \"#utility.yul\":1950:1954   */\n      dup3\n        /* \"#utility.yul\":1963:2103   */\n    tag_165:\n        /* \"#utility.yul\":1977:1983   */\n      dup2\n        /* \"#utility.yul\":1974:1975   */\n      dup2\n        /* \"#utility.yul\":1971:1984   */\n      lt\n        /* \"#utility.yul\":1963:2103   */\n      iszero\n      tag_167\n      jumpi\n        /* \"#utility.yul\":2072:2086   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":2068:2091   */\n      dup4\n      add\n        /* \"#utility.yul\":2062:2092   */\n      mload\n        /* \"#utility.yul\":2038:2055   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":2057:2059   */\n      0x40\n        /* \"#utility.yul\":2034:2060   */\n      add\n        /* \"#utility.yul\":2027:2093   */\n      mstore\n        /* \"#utility.yul\":1992:2002   */\n      dup3\n      add\n        /* \"#utility.yul\":1963:2103   */\n      jump(tag_165)\n    tag_167:\n        /* \"#utility.yul\":2121:2127   */\n      dup2\n        /* \"#utility.yul\":2118:2119   */\n      dup2\n        /* \"#utility.yul\":2115:2128   */\n      gt\n        /* \"#utility.yul\":2112:2114   */\n      iszero\n      tag_168\n      jumpi\n        /* \"#utility.yul\":2191:2195   */\n      dup4\n        /* \"#utility.yul\":2186:2188   */\n      0x40\n        /* \"#utility.yul\":2177:2183   */\n      dup4\n        /* \"#utility.yul\":2166:2175   */\n      dup8\n        /* \"#utility.yul\":2162:2184   */\n      add\n        /* \"#utility.yul\":2158:2189   */\n      add\n        /* \"#utility.yul\":2151:2196   */\n      mstore\n        /* \"#utility.yul\":2112:2114   */\n    tag_168:\n      pop\n        /* \"#utility.yul\":2267:2269   */\n      0x1f\n        /* \"#utility.yul\":2246:2261   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2242:2271   */\n      and\n        /* \"#utility.yul\":2227:2272   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":2274:2276   */\n      0x40\n        /* \"#utility.yul\":2223:2277   */\n      add\n      swap4\n        /* \"#utility.yul\":1801:2283   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5448:5677   */\n    tag_92:\n      0x00\n        /* \"#utility.yul\":5519:5520   */\n      dup3\n        /* \"#utility.yul\":5515:5521   */\n      not\n        /* \"#utility.yul\":5512:5513   */\n      dup3\n        /* \"#utility.yul\":5509:5522   */\n      gt\n        /* \"#utility.yul\":5506:5508   */\n      iszero\n      tag_179\n      jumpi\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":5545:5578   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5601:5605   */\n      0x11\n        /* \"#utility.yul\":5598:5599   */\n      0x04\n        /* \"#utility.yul\":5591:5606   */\n      mstore\n        /* \"#utility.yul\":5631:5635   */\n      0x24\n        /* \"#utility.yul\":5552:5555   */\n      dup2\n        /* \"#utility.yul\":5619:5636   */\n      revert\n        /* \"#utility.yul\":5506:5508   */\n    tag_179:\n      pop\n        /* \"#utility.yul\":5662:5671   */\n      add\n      swap1\n        /* \"#utility.yul\":5496:5677   */\n      jump\t// out\n        /* \"#utility.yul\":5682:6062   */\n    tag_70:\n        /* \"#utility.yul\":5761:5762   */\n      0x01\n        /* \"#utility.yul\":5757:5769   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":5804:5816   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":5825:5827   */\n      tag_181\n      jumpi\n        /* \"#utility.yul\":5879:5883   */\n      0x7f\n        /* \"#utility.yul\":5871:5877   */\n      dup3\n        /* \"#utility.yul\":5867:5884   */\n      and\n        /* \"#utility.yul\":5857:5884   */\n      swap2\n      pop\n        /* \"#utility.yul\":5825:5827   */\n    tag_181:\n        /* \"#utility.yul\":5932:5934   */\n      0x20\n        /* \"#utility.yul\":5924:5930   */\n      dup3\n        /* \"#utility.yul\":5921:5935   */\n      lt\n        /* \"#utility.yul\":5901:5919   */\n      dup2\n        /* \"#utility.yul\":5898:5936   */\n      eq\n        /* \"#utility.yul\":5895:5897   */\n      iszero\n      tag_182\n      jumpi\n        /* \"#utility.yul\":5978:5988   */\n      0x4e487b71\n        /* \"#utility.yul\":5973:5976   */\n      0xe0\n        /* \"#utility.yul\":5969:5989   */\n      shl\n        /* \"#utility.yul\":5966:5967   */\n      0x00\n        /* \"#utility.yul\":5959:5990   */\n      mstore\n        /* \"#utility.yul\":6013:6017   */\n      0x22\n        /* \"#utility.yul\":6010:6011   */\n      0x04\n        /* \"#utility.yul\":6003:6018   */\n      mstore\n        /* \"#utility.yul\":6041:6045   */\n      0x24\n        /* \"#utility.yul\":6038:6039   */\n      0x00\n        /* \"#utility.yul\":6031:6046   */\n      revert\n        /* \"#utility.yul\":5895:5897   */\n    tag_182:\n      pop\n        /* \"#utility.yul\":5737:6062   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212207f43aa71eacbefde6826ab2b5194ab6abb92608d1ba0cf5c94e466aa1e907c2a64736f6c63430008030033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:396:4",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:4",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "69:325:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "79:22:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "93:1:4",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "96:4:4"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "89:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:12:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "79:6:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "110:38:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "140:4:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "146:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "136:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "136:12:4"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "114:18:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "187:31:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "189:27:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "203:6:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "211:4:4",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "199:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "199:17:4"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "189:6:4"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "167:18:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:26:4"
															},
															"nodeType": "YulIf",
															"src": "157:2:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "277:111:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "298:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "305:3:4",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "310:10:4",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "301:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "301:20:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "291:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "291:31:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "291:31:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "342:1:4",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "345:4:4",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "335:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "335:15:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "335:15:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "370:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "373:4:4",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "363:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "363:15:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "363:15:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "233:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "264:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "253:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "253:14:4"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "230:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "230:38:4"
															},
															"nodeType": "YulIf",
															"src": "227:2:4"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "49:4:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "58:6:4",
														"type": ""
													}
												],
												"src": "14:380:4"
											}
										]
									},
									"contents": "{\n    { }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506040805180820190915260138082527f546573745f756e69737761705f546f6b656e41000000000000000000000000006020909201918252610055916003916100b4565b506040805180820190915260038082526254554160e81b6020909201918252610080916004916100b4565b50600580546001600160a01b0319163390811790915562989680600281905560009182526020829052604090912055610188565b8280546100c09061014d565b90600052602060002090601f0160209004810192826100e25760008555610128565b82601f106100fb57805160ff1916838001178555610128565b82800160010185558215610128579182015b8281111561012857825182559160200191906001019061010d565b50610134929150610138565b5090565b5b808211156101345760008155600101610139565b600181811c9082168061016157607f821691505b6020821081141561018257634e487b7160e01b600052602260045260246000fd5b50919050565b61088f806101976000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806370a082311161007157806370a082311461014157806395d89b4114610154578063a457c2d71461015c578063a9059cbb1461016f578063b2bdfa7b14610182578063dd62ed3e146101ad576100b4565b806306fdde03146100b9578063095ea7b3146100d757806318160ddd146100fa57806323b872dd1461010c578063313ce5671461011f578063395093511461012e575b600080fd5b6100c16101c0565b6040516100ce91906107a7565b60405180910390f35b6100ea6100e536600461077e565b610252565b60405190151581526020016100ce565b6002545b6040519081526020016100ce565b6100ea61011a366004610743565b61026a565b604051601281526020016100ce565b6100ea61013c36600461077e565b61028e565b6100fe61014f3660046106f0565b6102b0565b6100c16102cf565b6100ea61016a36600461077e565b6102de565b6100ea61017d36600461077e565b61035e565b600554610195906001600160a01b031681565b6040516001600160a01b0390911681526020016100ce565b6100fe6101bb366004610711565b61036c565b6060600380546101cf9061081e565b80601f01602080910402602001604051908101604052809291908181526020018280546101fb9061081e565b80156102485780601f1061021d57610100808354040283529160200191610248565b820191906000526020600020905b81548152906001019060200180831161022b57829003601f168201915b5050505050905090565b600032610260818585610397565b5060019392505050565b6000336102788582856104bb565b610283858585610535565b506001949350505050565b6000336102608185856102a1838361036c565b6102ab91906107fa565b610397565b6001600160a01b0381166000908152602081905260409020545b919050565b6060600480546101cf9061081e565b600033816102ec828661036c565b9050838110156103515760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102838286868403610397565b600033610260818585610535565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103f95760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610348565b6001600160a01b03821661045a5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610348565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006104c7848461036c565b9050600019811461052f57818110156105225760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610348565b61052f8484848403610397565b50505050565b6001600160a01b0383166105995760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610348565b6001600160a01b0382166105fb5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610348565b6001600160a01b038316600090815260208190526040902054818110156106735760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610348565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a361052f565b80356001600160a01b03811681146102ca57600080fd5b600060208284031215610701578081fd5b61070a826106d9565b9392505050565b60008060408385031215610723578081fd5b61072c836106d9565b915061073a602084016106d9565b90509250929050565b600080600060608486031215610757578081fd5b610760846106d9565b925061076e602085016106d9565b9150604084013590509250925092565b60008060408385031215610790578182fd5b610799836106d9565b946020939093013593505050565b6000602080835283518082850152825b818110156107d3578581018301518582016040015282016107b7565b818111156107e45783604083870101525b50601f01601f1916929092016040019392505050565b6000821982111561081957634e487b7160e01b81526011600452602481fd5b500190565b600181811c9082168061083257607f821691505b6020821081141561085357634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212207f43aa71eacbefde6826ab2b5194ab6abb92608d1ba0cf5c94e466aa1e907c2a64736f6c63430008030033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x13 DUP1 DUP3 MSTORE PUSH32 0x546573745F756E69737761705F546F6B656E4100000000000000000000000000 PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 DUP3 MSTORE PUSH2 0x55 SWAP2 PUSH1 0x3 SWAP2 PUSH2 0xB4 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP1 DUP3 MSTORE PUSH3 0x545541 PUSH1 0xE8 SHL PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 DUP3 MSTORE PUSH2 0x80 SWAP2 PUSH1 0x4 SWAP2 PUSH2 0xB4 JUMP JUMPDEST POP PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH3 0x989680 PUSH1 0x2 DUP2 SWAP1 SSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SSTORE PUSH2 0x188 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0xC0 SWAP1 PUSH2 0x14D JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0xE2 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x128 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0xFB JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x128 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x128 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x128 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x10D JUMP JUMPDEST POP PUSH2 0x134 SWAP3 SWAP2 POP PUSH2 0x138 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x134 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x139 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x161 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x182 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x88F DUP1 PUSH2 0x197 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x154 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x15C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0xB2BDFA7B EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1AD JUMPI PUSH2 0xB4 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xD7 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x12E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0x1C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE SWAP2 SWAP1 PUSH2 0x7A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEA PUSH2 0xE5 CALLDATASIZE PUSH1 0x4 PUSH2 0x77E JUMP JUMPDEST PUSH2 0x252 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCE JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCE JUMP JUMPDEST PUSH2 0xEA PUSH2 0x11A CALLDATASIZE PUSH1 0x4 PUSH2 0x743 JUMP JUMPDEST PUSH2 0x26A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCE JUMP JUMPDEST PUSH2 0xEA PUSH2 0x13C CALLDATASIZE PUSH1 0x4 PUSH2 0x77E JUMP JUMPDEST PUSH2 0x28E JUMP JUMPDEST PUSH2 0xFE PUSH2 0x14F CALLDATASIZE PUSH1 0x4 PUSH2 0x6F0 JUMP JUMPDEST PUSH2 0x2B0 JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x2CF JUMP JUMPDEST PUSH2 0xEA PUSH2 0x16A CALLDATASIZE PUSH1 0x4 PUSH2 0x77E JUMP JUMPDEST PUSH2 0x2DE JUMP JUMPDEST PUSH2 0xEA PUSH2 0x17D CALLDATASIZE PUSH1 0x4 PUSH2 0x77E JUMP JUMPDEST PUSH2 0x35E JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x195 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCE JUMP JUMPDEST PUSH2 0xFE PUSH2 0x1BB CALLDATASIZE PUSH1 0x4 PUSH2 0x711 JUMP JUMPDEST PUSH2 0x36C JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1CF SWAP1 PUSH2 0x81E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1FB SWAP1 PUSH2 0x81E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x248 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x21D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x248 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x22B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 ORIGIN PUSH2 0x260 DUP2 DUP6 DUP6 PUSH2 0x397 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x278 DUP6 DUP3 DUP6 PUSH2 0x4BB JUMP JUMPDEST PUSH2 0x283 DUP6 DUP6 DUP6 PUSH2 0x535 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x260 DUP2 DUP6 DUP6 PUSH2 0x2A1 DUP4 DUP4 PUSH2 0x36C JUMP JUMPDEST PUSH2 0x2AB SWAP2 SWAP1 PUSH2 0x7FA JUMP JUMPDEST PUSH2 0x397 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1CF SWAP1 PUSH2 0x81E JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2EC DUP3 DUP7 PUSH2 0x36C JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x351 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x283 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x397 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x260 DUP2 DUP6 DUP6 PUSH2 0x535 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x348 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x45A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x348 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C7 DUP5 DUP5 PUSH2 0x36C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x52F JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x522 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x348 JUMP JUMPDEST PUSH2 0x52F DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x397 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x599 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x348 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x348 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x673 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x348 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x52F JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x701 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x70A DUP3 PUSH2 0x6D9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x723 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x72C DUP4 PUSH2 0x6D9 JUMP JUMPDEST SWAP2 POP PUSH2 0x73A PUSH1 0x20 DUP5 ADD PUSH2 0x6D9 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x757 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x760 DUP5 PUSH2 0x6D9 JUMP JUMPDEST SWAP3 POP PUSH2 0x76E PUSH1 0x20 DUP6 ADD PUSH2 0x6D9 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x790 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x799 DUP4 PUSH2 0x6D9 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x7D3 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x7B7 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x7E4 JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x819 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x832 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x853 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH32 0x43AA71EACBEFDE6826AB2B5194AB6ABB92608D1BA0CF5C94E466AA1E907C2A64 PUSH20 0x6F6C634300080300330000000000000000000000 ",
							"sourceMap": "484:11745:0:-:0;;;982:191;;;;;;;;;-1:-1:-1;1007:29:0;;;;;;;;;;;;;;;;;;;;;;;:5;;:29;:::i;:::-;-1:-1:-1;1047:15:0;;;;;;;;;;;;;-1:-1:-1;;;1047:15:0;;;;;;;;;:7;;:15;:::i;:::-;-1:-1:-1;1073:6:0;:17;;-1:-1:-1;;;;;;1073:17:0;1080:10;1073:17;;;;;;1114:8;1101:12;:21;;;1073:6;1133:17;;;;;;;;;;;:30;484:11745;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;484:11745:0;;;-1:-1:-1;484:11745:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:380:4;93:1;89:12;;;;136;;;157:2;;211:4;203:6;199:17;189:27;;157:2;264;256:6;253:14;233:18;230:38;227:2;;;310:10;305:3;301:20;298:1;291:31;345:4;342:1;335:15;373:4;370:1;363:15;227:2;;69:325;;;:::o;:::-;484:11745:0;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:6064:4",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:4",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:4"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:4",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:4",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:4"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:4"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:4"
															},
															"nodeType": "YulIf",
															"src": "111:2:4"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:4",
														"type": ""
													}
												],
												"src": "14:173:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "262:126:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "308:26:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "317:6:4"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "325:6:4"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "310:22:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "310:22:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "283:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "292:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "279:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "279:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "304:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:32:4"
															},
															"nodeType": "YulIf",
															"src": "272:2:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "343:39:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "372:9:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "353:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "353:29:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "343:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "228:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "239:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "251:6:4",
														"type": ""
													}
												],
												"src": "192:196:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "480:183:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "526:26:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "535:6:4"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "543:6:4"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "528:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "528:22:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "528:22:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "501:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "510:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "497:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "497:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "522:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "493:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "493:32:4"
															},
															"nodeType": "YulIf",
															"src": "490:2:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "561:39:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "590:9:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "571:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "571:29:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "561:6:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "609:48:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "642:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "653:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "638:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "638:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "619:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "619:38:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "609:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "438:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "449:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "461:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "469:6:4",
														"type": ""
													}
												],
												"src": "393:270:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "772:234:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "818:26:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "827:6:4"
																				},
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "835:6:4"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "820:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "820:22:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "820:22:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "793:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "802:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "789:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "789:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "814:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "785:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "785:32:4"
															},
															"nodeType": "YulIf",
															"src": "782:2:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "853:39:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "882:9:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "863:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "863:29:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "853:6:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "901:48:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "934:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "945:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "930:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "930:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "911:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "911:38:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "901:6:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "958:42:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "985:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "996:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "981:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "981:18:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "968:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "968:32:4"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "958:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "722:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "733:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "745:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "753:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "761:6:4",
														"type": ""
													}
												],
												"src": "668:338:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1098:177:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1144:26:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1153:6:4"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1161:6:4"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1146:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1146:22:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1146:22:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1119:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1128:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1115:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1115:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1140:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1111:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1111:32:4"
															},
															"nodeType": "YulIf",
															"src": "1108:2:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1179:39:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1208:9:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1189:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1189:29:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1179:6:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1227:42:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1254:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1265:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1250:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1250:18:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1237:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1237:32:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1227:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1056:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1067:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1079:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1087:6:4",
														"type": ""
													}
												],
												"src": "1011:264:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1381:102:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1391:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1403:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1414:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1399:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1399:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1391:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1433:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1448:6:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1464:3:4",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1469:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1460:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1460:11:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1473:1:4",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1456:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1456:19:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1444:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1444:32:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1426:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1426:51:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1426:51:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1350:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1361:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1372:4:4",
														"type": ""
													}
												],
												"src": "1280:203:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1583:92:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1593:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1605:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1616:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1601:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1601:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1593:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1635:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1660:6:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1653:6:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1653:14:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1646:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1646:22:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1628:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1628:41:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1628:41:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1552:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1563:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1574:4:4",
														"type": ""
													}
												],
												"src": "1488:187:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1801:482:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1811:12:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1821:2:4",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1815:2:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1839:9:4"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1850:2:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1832:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1832:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1832:21:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1862:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1882:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1876:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1876:13:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1866:6:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1909:9:4"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1920:2:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1905:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1905:18:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1925:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1898:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1898:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1898:34:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1941:13:4",
															"value": {
																"name": "tail",
																"nodeType": "YulIdentifier",
																"src": "1950:4:4"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1945:1:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2013:90:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "2042:9:4"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "2053:1:4"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2038:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2038:17:4"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2057:2:4",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2034:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2034:26:4"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "2076:6:4"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "2084:1:4"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "2072:3:4"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "2072:14:4"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "2088:2:4"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2068:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2068:23:4"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2062:5:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2062:30:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2027:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2027:66:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2027:66:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1974:1:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1977:6:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1971:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1971:13:4"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1985:19:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1987:15:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1996:1:4"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1999:2:4"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1992:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1992:10:4"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1987:1:4"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1967:3:4",
																"statements": []
															},
															"src": "1963:140:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2137:69:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "2166:9:4"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "2177:6:4"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2162:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2162:22:4"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2186:2:4",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2158:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2158:31:4"
																				},
																				{
																					"name": "tail",
																					"nodeType": "YulIdentifier",
																					"src": "2191:4:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2151:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2151:45:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2151:45:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2118:1:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2121:6:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2115:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2115:13:4"
															},
															"nodeType": "YulIf",
															"src": "2112:2:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2215:62:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2231:9:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "2250:6:4"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2258:2:4",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2246:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2246:15:4"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2267:2:4",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "2263:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2263:7:4"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "2242:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2242:29:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2227:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2227:45:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2274:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2223:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2223:54:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2215:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1770:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1781:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1792:4:4",
														"type": ""
													}
												],
												"src": "1680:603:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2462:225:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2479:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2490:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2472:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2472:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2472:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2513:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2524:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2509:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2509:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2529:2:4",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2502:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2502:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2502:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2552:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2563:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2548:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2548:18:4"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2568:34:4",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2541:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2541:62:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2541:62:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2623:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2634:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2619:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2619:18:4"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2639:5:4",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2612:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2612:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2612:33:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2654:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2666:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2677:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2662:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2662:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2654:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2439:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2453:4:4",
														"type": ""
													}
												],
												"src": "2288:399:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2866:224:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2883:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2894:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2876:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2876:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2876:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2917:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2928:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2913:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2913:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2933:2:4",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2906:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2906:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2906:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2956:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2967:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2952:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2952:18:4"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2972:34:4",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2945:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2945:62:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2945:62:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3027:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3038:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3023:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3023:18:4"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3043:4:4",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3016:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3016:32:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3016:32:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3057:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3069:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3080:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3065:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3065:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3057:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2843:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2857:4:4",
														"type": ""
													}
												],
												"src": "2692:398:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3269:179:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3286:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3297:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3279:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3279:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3279:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3320:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3331:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3316:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3316:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3336:2:4",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3309:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3309:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3309:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3359:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3370:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3355:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3355:18:4"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3375:31:4",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3348:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3348:59:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3348:59:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3416:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3428:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3439:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3424:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3424:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3416:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3246:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3260:4:4",
														"type": ""
													}
												],
												"src": "3095:353:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3627:228:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3644:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3655:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3637:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3637:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3637:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3678:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3689:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3674:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3674:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3694:2:4",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3667:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3667:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3667:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3717:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3728:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3713:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3713:18:4"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3733:34:4",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3706:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3706:62:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3706:62:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3788:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3799:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3784:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3784:18:4"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3804:8:4",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3777:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3777:36:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3777:36:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3822:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3834:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3845:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3830:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3830:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3822:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3604:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3618:4:4",
														"type": ""
													}
												],
												"src": "3453:402:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4034:227:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4051:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4062:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4044:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4044:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4044:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4085:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4096:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4081:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4081:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4101:2:4",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4074:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4074:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4074:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4124:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4135:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4120:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4120:18:4"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4140:34:4",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4113:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4113:62:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4113:62:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4195:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4206:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4191:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4191:18:4"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4211:7:4",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4184:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4184:35:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4184:35:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4228:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4240:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4251:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4236:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4236:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4228:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4011:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4025:4:4",
														"type": ""
													}
												],
												"src": "3860:401:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4440:226:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4457:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4468:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4450:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4450:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4450:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4491:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4502:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4487:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4487:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4507:2:4",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4480:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4480:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4480:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4530:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4541:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4526:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4526:18:4"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4546:34:4",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4519:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4519:62:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4519:62:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4601:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4612:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4597:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4597:18:4"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4617:6:4",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4590:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4590:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4590:34:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4633:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4645:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4656:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4641:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4641:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4633:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4417:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4431:4:4",
														"type": ""
													}
												],
												"src": "4266:400:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4845:227:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4862:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4873:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4855:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4855:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4855:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4896:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4907:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4892:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4892:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4912:2:4",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4885:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4885:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4885:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4935:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4946:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4931:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4931:18:4"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4951:34:4",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4924:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4924:62:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4924:62:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5006:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5017:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5002:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5002:18:4"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5022:7:4",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4995:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4995:35:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4995:35:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5039:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5051:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5062:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5047:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5047:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5039:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4822:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4836:4:4",
														"type": ""
													}
												],
												"src": "4671:401:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5178:76:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5188:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5200:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5211:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5196:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5196:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5188:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5230:9:4"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5241:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5223:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5223:25:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5223:25:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5147:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5158:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5169:4:4",
														"type": ""
													}
												],
												"src": "5077:177:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5356:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5366:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5378:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5389:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5374:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5374:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5366:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5408:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5423:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5431:4:4",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5419:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5419:17:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5401:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5401:36:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5401:36:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5325:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5336:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5347:4:4",
														"type": ""
													}
												],
												"src": "5259:184:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5496:181:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5531:115:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "sum",
																					"nodeType": "YulIdentifier",
																					"src": "5552:3:4"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5561:3:4",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5566:10:4",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5557:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5557:20:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5545:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5545:33:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5545:33:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5598:1:4",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5601:4:4",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5591:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5591:15:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5591:15:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "sum",
																					"nodeType": "YulIdentifier",
																					"src": "5626:3:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5631:4:4",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5619:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5619:17:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5619:17:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5512:1:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "5519:1:4"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "5515:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5515:6:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5509:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5509:13:4"
															},
															"nodeType": "YulIf",
															"src": "5506:2:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5655:16:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5666:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5669:1:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5662:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5662:9:4"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "5655:3:4"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5479:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5482:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "5488:3:4",
														"type": ""
													}
												],
												"src": "5448:229:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5737:325:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5747:22:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5761:1:4",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5764:4:4"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5757:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5757:12:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "5747:6:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5778:38:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5808:4:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5814:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5804:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5804:12:4"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "5782:18:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5855:31:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5857:27:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "5871:6:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5879:4:4",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "5867:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5867:17:4"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5857:6:4"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5835:18:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5828:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5828:26:4"
															},
															"nodeType": "YulIf",
															"src": "5825:2:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5945:111:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5966:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5973:3:4",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5978:10:4",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5969:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5969:20:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5959:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5959:31:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5959:31:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6010:1:4",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6013:4:4",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6003:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6003:15:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6003:15:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6038:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6041:4:4",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6031:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6031:15:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6031:15:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5901:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5924:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5932:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "5921:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5921:14:4"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "5898:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5898:38:4"
															},
															"nodeType": "YulIf",
															"src": "5895:2:4"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "5717:4:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5726:6:4",
														"type": ""
													}
												],
												"src": "5682:380:4"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value2, value2) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := tail\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), tail)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(sum, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(sum, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100b45760003560e01c806370a082311161007157806370a082311461014157806395d89b4114610154578063a457c2d71461015c578063a9059cbb1461016f578063b2bdfa7b14610182578063dd62ed3e146101ad576100b4565b806306fdde03146100b9578063095ea7b3146100d757806318160ddd146100fa57806323b872dd1461010c578063313ce5671461011f578063395093511461012e575b600080fd5b6100c16101c0565b6040516100ce91906107a7565b60405180910390f35b6100ea6100e536600461077e565b610252565b60405190151581526020016100ce565b6002545b6040519081526020016100ce565b6100ea61011a366004610743565b61026a565b604051601281526020016100ce565b6100ea61013c36600461077e565b61028e565b6100fe61014f3660046106f0565b6102b0565b6100c16102cf565b6100ea61016a36600461077e565b6102de565b6100ea61017d36600461077e565b61035e565b600554610195906001600160a01b031681565b6040516001600160a01b0390911681526020016100ce565b6100fe6101bb366004610711565b61036c565b6060600380546101cf9061081e565b80601f01602080910402602001604051908101604052809291908181526020018280546101fb9061081e565b80156102485780601f1061021d57610100808354040283529160200191610248565b820191906000526020600020905b81548152906001019060200180831161022b57829003601f168201915b5050505050905090565b600032610260818585610397565b5060019392505050565b6000336102788582856104bb565b610283858585610535565b506001949350505050565b6000336102608185856102a1838361036c565b6102ab91906107fa565b610397565b6001600160a01b0381166000908152602081905260409020545b919050565b6060600480546101cf9061081e565b600033816102ec828661036c565b9050838110156103515760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102838286868403610397565b600033610260818585610535565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103f95760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610348565b6001600160a01b03821661045a5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610348565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006104c7848461036c565b9050600019811461052f57818110156105225760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610348565b61052f8484848403610397565b50505050565b6001600160a01b0383166105995760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610348565b6001600160a01b0382166105fb5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610348565b6001600160a01b038316600090815260208190526040902054818110156106735760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610348565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a361052f565b80356001600160a01b03811681146102ca57600080fd5b600060208284031215610701578081fd5b61070a826106d9565b9392505050565b60008060408385031215610723578081fd5b61072c836106d9565b915061073a602084016106d9565b90509250929050565b600080600060608486031215610757578081fd5b610760846106d9565b925061076e602085016106d9565b9150604084013590509250925092565b60008060408385031215610790578182fd5b610799836106d9565b946020939093013593505050565b6000602080835283518082850152825b818110156107d3578581018301518582016040015282016107b7565b818111156107e45783604083870101525b50601f01601f1916929092016040019392505050565b6000821982111561081957634e487b7160e01b81526011600452602481fd5b500190565b600181811c9082168061083257607f821691505b6020821081141561085357634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212207f43aa71eacbefde6826ab2b5194ab6abb92608d1ba0cf5c94e466aa1e907c2a64736f6c63430008030033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x154 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x15C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0xB2BDFA7B EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1AD JUMPI PUSH2 0xB4 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xD7 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x12E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0x1C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE SWAP2 SWAP1 PUSH2 0x7A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEA PUSH2 0xE5 CALLDATASIZE PUSH1 0x4 PUSH2 0x77E JUMP JUMPDEST PUSH2 0x252 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCE JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCE JUMP JUMPDEST PUSH2 0xEA PUSH2 0x11A CALLDATASIZE PUSH1 0x4 PUSH2 0x743 JUMP JUMPDEST PUSH2 0x26A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCE JUMP JUMPDEST PUSH2 0xEA PUSH2 0x13C CALLDATASIZE PUSH1 0x4 PUSH2 0x77E JUMP JUMPDEST PUSH2 0x28E JUMP JUMPDEST PUSH2 0xFE PUSH2 0x14F CALLDATASIZE PUSH1 0x4 PUSH2 0x6F0 JUMP JUMPDEST PUSH2 0x2B0 JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x2CF JUMP JUMPDEST PUSH2 0xEA PUSH2 0x16A CALLDATASIZE PUSH1 0x4 PUSH2 0x77E JUMP JUMPDEST PUSH2 0x2DE JUMP JUMPDEST PUSH2 0xEA PUSH2 0x17D CALLDATASIZE PUSH1 0x4 PUSH2 0x77E JUMP JUMPDEST PUSH2 0x35E JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x195 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCE JUMP JUMPDEST PUSH2 0xFE PUSH2 0x1BB CALLDATASIZE PUSH1 0x4 PUSH2 0x711 JUMP JUMPDEST PUSH2 0x36C JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1CF SWAP1 PUSH2 0x81E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1FB SWAP1 PUSH2 0x81E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x248 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x21D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x248 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x22B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 ORIGIN PUSH2 0x260 DUP2 DUP6 DUP6 PUSH2 0x397 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x278 DUP6 DUP3 DUP6 PUSH2 0x4BB JUMP JUMPDEST PUSH2 0x283 DUP6 DUP6 DUP6 PUSH2 0x535 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x260 DUP2 DUP6 DUP6 PUSH2 0x2A1 DUP4 DUP4 PUSH2 0x36C JUMP JUMPDEST PUSH2 0x2AB SWAP2 SWAP1 PUSH2 0x7FA JUMP JUMPDEST PUSH2 0x397 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1CF SWAP1 PUSH2 0x81E JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2EC DUP3 DUP7 PUSH2 0x36C JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x351 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x283 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x397 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x260 DUP2 DUP6 DUP6 PUSH2 0x535 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x348 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x45A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x348 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C7 DUP5 DUP5 PUSH2 0x36C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x52F JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x522 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x348 JUMP JUMPDEST PUSH2 0x52F DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x397 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x599 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x348 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x348 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x673 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x348 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x52F JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x701 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x70A DUP3 PUSH2 0x6D9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x723 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x72C DUP4 PUSH2 0x6D9 JUMP JUMPDEST SWAP2 POP PUSH2 0x73A PUSH1 0x20 DUP5 ADD PUSH2 0x6D9 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x757 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x760 DUP5 PUSH2 0x6D9 JUMP JUMPDEST SWAP3 POP PUSH2 0x76E PUSH1 0x20 DUP6 ADD PUSH2 0x6D9 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x790 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x799 DUP4 PUSH2 0x6D9 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x7D3 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x7B7 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x7E4 JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x819 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x832 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x853 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH32 0x43AA71EACBEFDE6826AB2B5194AB6ABB92608D1BA0CF5C94E466AA1E907C2A64 PUSH20 0x6F6C634300080300330000000000000000000000 ",
							"sourceMap": "484:11745:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1243:100;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3603:198;;;;;;:::i;:::-;;:::i;:::-;;;1653:14:4;;1646:22;1628:41;;1616:2;1601:18;3603:198:0;1583:92:4;2372:108:0;2460:12;;2372:108;;;5223:25:4;;;5211:2;5196:18;2372:108:0;5178:76:4;4381:261:0;;;;;;:::i;:::-;;:::i;2214:93::-;;;2297:2;5401:36:4;;5389:2;5374:18;2214:93:0;5356:87:4;5051:238:0;;;;;;:::i;:::-;;:::i;2543:127::-;;;;;;:::i;:::-;;:::i;1462:104::-;;;:::i;5792:436::-;;;;;;:::i;:::-;;:::i;2876:193::-;;;;;;:::i;:::-;;:::i;770:21::-;;;;;-1:-1:-1;;;;;770:21:0;;;;;;-1:-1:-1;;;;;1444:32:4;;;1426:51;;1414:2;1399:18;770:21:0;1381:102:4;3132:151:0;;;;;;:::i;:::-;;:::i;1243:100::-;1297:13;1330:5;1323:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1243:100;:::o;3603:198::-;3686:4;3719:9;3739:32;3719:9;3755:7;3764:6;3739:8;:32::i;:::-;-1:-1:-1;3789:4:0;;3603:198;-1:-1:-1;;;3603:198:0:o;4381:261::-;4478:4;719:10:3;4536:38:0;4552:4;719:10:3;4567:6:0;4536:15;:38::i;:::-;4585:27;4595:4;4601:2;4605:6;4585:9;:27::i;:::-;-1:-1:-1;4630:4:0;;4381:261;-1:-1:-1;;;;4381:261:0:o;5051:238::-;5139:4;719:10:3;5195:64:0;719:10:3;5211:7:0;5248:10;5220:25;719:10:3;5211:7:0;5220:9;:25::i;:::-;:38;;;;:::i;:::-;5195:8;:64::i;2543:127::-;-1:-1:-1;;;;;2644:18:0;;2617:7;2644:18;;;;;;;;;;;2543:127;;;;:::o;1462:104::-;1518:13;1551:7;1544:14;;;;;:::i;5792:436::-;5885:4;719:10:3;5885:4:0;5968:25;719:10:3;5985:7:0;5968:9;:25::i;:::-;5941:52;;6032:15;6012:16;:35;;6004:85;;;;-1:-1:-1;;;6004:85:0;;4873:2:4;6004:85:0;;;4855:21:4;4912:2;4892:18;;;4885:30;4951:34;4931:18;;;4924:62;-1:-1:-1;;;5002:18:4;;;4995:35;5047:19;;6004:85:0;;;;;;;;;6125:60;6134:5;6141:7;6169:15;6150:16;:34;6125:8;:60::i;2876:193::-;2955:4;719:10:3;3011:28:0;719:10:3;3028:2:0;3032:6;3011:9;:28::i;3132:151::-;-1:-1:-1;;;;;3248:18:0;;;3221:7;3248:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3132:151::o;9785:346::-;-1:-1:-1;;;;;9887:19:0;;9879:68;;;;-1:-1:-1;;;9879:68:0;;4468:2:4;9879:68:0;;;4450:21:4;4507:2;4487:18;;;4480:30;4546:34;4526:18;;;4519:62;-1:-1:-1;;;4597:18:4;;;4590:34;4641:19;;9879:68:0;4440:226:4;9879:68:0;-1:-1:-1;;;;;9966:21:0;;9958:68;;;;-1:-1:-1;;;9958:68:0;;2894:2:4;9958:68:0;;;2876:21:4;2933:2;2913:18;;;2906:30;2972:34;2952:18;;;2945:62;-1:-1:-1;;;3023:18:4;;;3016:32;3065:19;;9958:68:0;2866:224:4;9958:68:0;-1:-1:-1;;;;;10039:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10091:32;;5223:25:4;;;10091:32:0;;5196:18:4;10091:32:0;;;;;;;9785:346;;;:::o;10422:419::-;10523:24;10550:25;10560:5;10567:7;10550:9;:25::i;:::-;10523:52;;-1:-1:-1;;10590:16:0;:37;10586:248;;10672:6;10652:16;:26;;10644:68;;;;-1:-1:-1;;;10644:68:0;;3297:2:4;10644:68:0;;;3279:21:4;3336:2;3316:18;;;3309:30;3375:31;3355:18;;;3348:59;3424:18;;10644:68:0;3269:179:4;10644:68:0;10756:51;10765:5;10772:7;10800:6;10781:16;:25;10756:8;:51::i;:::-;10422:419;;;;:::o;6698:806::-;-1:-1:-1;;;;;6795:18:0;;6787:68;;;;-1:-1:-1;;;6787:68:0;;4062:2:4;6787:68:0;;;4044:21:4;4101:2;4081:18;;;4074:30;4140:34;4120:18;;;4113:62;-1:-1:-1;;;4191:18:4;;;4184:35;4236:19;;6787:68:0;4034:227:4;6787:68:0;-1:-1:-1;;;;;6874:16:0;;6866:64;;;;-1:-1:-1;;;6866:64:0;;2490:2:4;6866:64:0;;;2472:21:4;2529:2;2509:18;;;2502:30;2568:34;2548:18;;;2541:62;-1:-1:-1;;;2619:18:4;;;2612:33;2662:19;;6866:64:0;2462:225:4;6866:64:0;-1:-1:-1;;;;;7016:15:0;;6994:19;7016:15;;;;;;;;;;;7050:21;;;;7042:72;;;;-1:-1:-1;;;7042:72:0;;3655:2:4;7042:72:0;;;3637:21:4;3694:2;3674:18;;;3667:30;3733:34;3713:18;;;3706:62;-1:-1:-1;;;3784:18:4;;;3777:36;3830:19;;7042:72:0;3627:228:4;7042:72:0;-1:-1:-1;;;;;7150:15:0;;;:9;:15;;;;;;;;;;;7168:20;;;7150:38;;7368:13;;;;;;;;;;:23;;;;;;7420:26;;5223:25:4;;;7368:13:0;;7420:26;;5196:18:4;7420:26:0;;;;;;;7459:37;11441:91;14:173:4;82:20;;-1:-1:-1;;;;;131:31:4;;121:42;;111:2;;177:1;174;167:12;192:196;;304:2;292:9;283:7;279:23;275:32;272:2;;;325:6;317;310:22;272:2;353:29;372:9;353:29;:::i;:::-;343:39;262:126;-1:-1:-1;;;262:126:4:o;393:270::-;;;522:2;510:9;501:7;497:23;493:32;490:2;;;543:6;535;528:22;490:2;571:29;590:9;571:29;:::i;:::-;561:39;;619:38;653:2;642:9;638:18;619:38;:::i;:::-;609:48;;480:183;;;;;:::o;668:338::-;;;;814:2;802:9;793:7;789:23;785:32;782:2;;;835:6;827;820:22;782:2;863:29;882:9;863:29;:::i;:::-;853:39;;911:38;945:2;934:9;930:18;911:38;:::i;:::-;901:48;;996:2;985:9;981:18;968:32;958:42;;772:234;;;;;:::o;1011:264::-;;;1140:2;1128:9;1119:7;1115:23;1111:32;1108:2;;;1161:6;1153;1146:22;1108:2;1189:29;1208:9;1189:29;:::i;:::-;1179:39;1265:2;1250:18;;;;1237:32;;-1:-1:-1;;;1098:177:4:o;1680:603::-;;1821:2;1850;1839:9;1832:21;1882:6;1876:13;1925:6;1920:2;1909:9;1905:18;1898:34;1950:4;1963:140;1977:6;1974:1;1971:13;1963:140;;;2072:14;;;2068:23;;2062:30;2038:17;;;2057:2;2034:26;2027:66;1992:10;;1963:140;;;2121:6;2118:1;2115:13;2112:2;;;2191:4;2186:2;2177:6;2166:9;2162:22;2158:31;2151:45;2112:2;-1:-1:-1;2267:2:4;2246:15;-1:-1:-1;;2242:29:4;2227:45;;;;2274:2;2223:54;;1801:482;-1:-1:-1;;;1801:482:4:o;5448:229::-;;5519:1;5515:6;5512:1;5509:13;5506:2;;;-1:-1:-1;;;5545:33:4;;5601:4;5598:1;5591:15;5631:4;5552:3;5619:17;5506:2;-1:-1:-1;5662:9:4;;5496:181::o;5682:380::-;5761:1;5757:12;;;;5804;;;5825:2;;5879:4;5871:6;5867:17;5857:27;;5825:2;5932;5924:6;5921:14;5901:18;5898:38;5895:2;;;5978:10;5973:3;5969:20;5966:1;5959:31;6013:4;6010:1;6003:15;6041:4;6038:1;6031:15;5895:2;;5737:325;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "438200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"_owner()": "1125",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "22524",
								"balanceOf(address)": "infinite",
								"decimals()": "266",
								"decreaseAllowance(address,uint256)": "23594",
								"increaseAllowance(address,uint256)": "23689",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1026",
								"transfer(address,uint256)": "44312",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "infinite",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 484,
									"end": 12229,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 982,
									"end": 1173,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 982,
									"end": 1173,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 982,
									"end": 1173,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 982,
									"end": 1173,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 982,
									"end": 1173,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 982,
									"end": 1173,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 982,
									"end": 1173,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 982,
									"end": 1173,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 982,
									"end": 1173,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 982,
									"end": 1173,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1007,
									"end": 1036,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1007,
									"end": 1036,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1007,
									"end": 1036,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1007,
									"end": 1036,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1007,
									"end": 1036,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1007,
									"end": 1036,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1007,
									"end": 1036,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1007,
									"end": 1036,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1007,
									"end": 1036,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1007,
									"end": 1036,
									"name": "PUSH",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1007,
									"end": 1036,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1007,
									"end": 1036,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1007,
									"end": 1036,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1007,
									"end": 1036,
									"name": "PUSH",
									"source": 0,
									"value": "546573745F756E69737761705F546F6B656E4100000000000000000000000000"
								},
								{
									"begin": 1007,
									"end": 1036,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1007,
									"end": 1036,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1007,
									"end": 1036,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 1007,
									"end": 1036,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1007,
									"end": 1036,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1007,
									"end": 1036,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1007,
									"end": 1036,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1007,
									"end": 1036,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1007,
									"end": 1036,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1007,
									"end": 1012,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1007,
									"end": 1012,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1007,
									"end": 1036,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1007,
									"end": 1036,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1007,
									"end": 1036,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1007,
									"end": 1036,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1047,
									"end": 1062,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1047,
									"end": 1062,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1047,
									"end": 1062,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1047,
									"end": 1062,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1047,
									"end": 1062,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1047,
									"end": 1062,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1047,
									"end": 1062,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1047,
									"end": 1062,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1047,
									"end": 1062,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1047,
									"end": 1062,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1047,
									"end": 1062,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1047,
									"end": 1062,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1047,
									"end": 1062,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "545541"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1047,
									"end": 1062,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1047,
									"end": 1062,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1047,
									"end": 1062,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 1047,
									"end": 1062,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1047,
									"end": 1062,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1047,
									"end": 1062,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1047,
									"end": 1062,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1047,
									"end": 1062,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1047,
									"end": 1062,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1047,
									"end": 1054,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1047,
									"end": 1054,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1047,
									"end": 1062,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1047,
									"end": 1062,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1047,
									"end": 1062,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1047,
									"end": 1062,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1073,
									"end": 1079,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1073,
									"end": 1090,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1073,
									"end": 1090,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1073,
									"end": 1090,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1080,
									"end": 1090,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 1073,
									"end": 1090,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1073,
									"end": 1090,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1073,
									"end": 1090,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1073,
									"end": 1090,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1073,
									"end": 1090,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1073,
									"end": 1090,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1114,
									"end": 1122,
									"name": "PUSH",
									"source": 0,
									"value": "989680"
								},
								{
									"begin": 1101,
									"end": 1113,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1101,
									"end": 1122,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1101,
									"end": 1122,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1101,
									"end": 1122,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1073,
									"end": 1079,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1133,
									"end": 1150,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1133,
									"end": 1150,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1133,
									"end": 1150,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1133,
									"end": 1150,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1133,
									"end": 1150,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1133,
									"end": 1150,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1133,
									"end": 1150,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1133,
									"end": 1150,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1133,
									"end": 1150,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1133,
									"end": 1150,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1133,
									"end": 1150,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 1133,
									"end": 1163,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 394,
									"name": "tag",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 14,
									"end": 394,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 93,
									"end": 94,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 89,
									"end": 101,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 89,
									"end": 101,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 89,
									"end": 101,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 89,
									"end": 101,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 136,
									"end": 148,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 136,
									"end": 148,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 136,
									"end": 148,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 157,
									"end": 159,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 157,
									"end": 159,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 211,
									"end": 215,
									"name": "PUSH",
									"source": 4,
									"value": "7F"
								},
								{
									"begin": 203,
									"end": 209,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 199,
									"end": 216,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 189,
									"end": 216,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 189,
									"end": 216,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 157,
									"end": 159,
									"name": "tag",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 157,
									"end": 159,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 264,
									"end": 266,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 256,
									"end": 262,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 253,
									"end": 267,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 233,
									"end": 251,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 230,
									"end": 268,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 227,
									"end": 229,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 227,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 227,
									"end": 229,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 310,
									"end": 320,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B71"
								},
								{
									"begin": 305,
									"end": 308,
									"name": "PUSH",
									"source": 4,
									"value": "E0"
								},
								{
									"begin": 301,
									"end": 321,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 298,
									"end": 299,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 291,
									"end": 322,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 345,
									"end": 349,
									"name": "PUSH",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 342,
									"end": 343,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 335,
									"end": 350,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 373,
									"end": 377,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 370,
									"end": 371,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 363,
									"end": 378,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 227,
									"end": 229,
									"name": "tag",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 227,
									"end": 229,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 227,
									"end": 229,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 69,
									"end": 394,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 69,
									"end": 394,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 69,
									"end": 394,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 69,
									"end": 394,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 69,
									"end": 394,
									"name": "tag",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 69,
									"end": 394,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 484,
									"end": 12229,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207f43aa71eacbefde6826ab2b5194ab6abb92608d1ba0cf5c94e466aa1e907c2a64736f6c63430008030033",
									".code": [
										{
											"begin": 484,
											"end": 12229,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "PUSH",
											"source": 0,
											"value": "B2BDFA7B"
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 484,
											"end": 12229,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1243,
											"end": 1343,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1243,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1243,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1243,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1243,
											"end": 1343,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1243,
											"end": 1343,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1243,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1243,
											"end": 1343,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1243,
											"end": 1343,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1243,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1243,
											"end": 1343,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1243,
											"end": 1343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1243,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1243,
											"end": 1343,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1243,
											"end": 1343,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1243,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1243,
											"end": 1343,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1243,
											"end": 1343,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1243,
											"end": 1343,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1243,
											"end": 1343,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1243,
											"end": 1343,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1243,
											"end": 1343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1243,
											"end": 1343,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3603,
											"end": 3801,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3603,
											"end": 3801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3603,
											"end": 3801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3603,
											"end": 3801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 3603,
											"end": 3801,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3603,
											"end": 3801,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3603,
											"end": 3801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 3603,
											"end": 3801,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3603,
											"end": 3801,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 3603,
											"end": 3801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3603,
											"end": 3801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 3603,
											"end": 3801,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3603,
											"end": 3801,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3603,
											"end": 3801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3603,
											"end": 3801,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3603,
											"end": 3801,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1653,
											"end": 1667,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1653,
											"end": 1667,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1646,
											"end": 1668,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1628,
											"end": 1669,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1628,
											"end": 1669,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1616,
											"end": 1618,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1601,
											"end": 1619,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3603,
											"end": 3801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1583,
											"end": 1675,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2372,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2372,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2472,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2460,
											"end": 2472,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2372,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2372,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2372,
											"end": 2480,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2372,
											"end": 2480,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5223,
											"end": 5248,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5223,
											"end": 5248,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5223,
											"end": 5248,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5211,
											"end": 5213,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5196,
											"end": 5214,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2372,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 5178,
											"end": 5254,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4381,
											"end": 4642,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 4381,
											"end": 4642,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4381,
											"end": 4642,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4381,
											"end": 4642,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 4381,
											"end": 4642,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4381,
											"end": 4642,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4381,
											"end": 4642,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 4381,
											"end": 4642,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4381,
											"end": 4642,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 4381,
											"end": 4642,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4381,
											"end": 4642,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 4381,
											"end": 4642,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2214,
											"end": 2307,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2214,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2214,
											"end": 2307,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2214,
											"end": 2307,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2297,
											"end": 2299,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 5401,
											"end": 5437,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5401,
											"end": 5437,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5389,
											"end": 5391,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5374,
											"end": 5392,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2214,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 5356,
											"end": 5443,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5051,
											"end": 5289,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 5051,
											"end": 5289,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5051,
											"end": 5289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5051,
											"end": 5289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5051,
											"end": 5289,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5051,
											"end": 5289,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5051,
											"end": 5289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 5051,
											"end": 5289,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5051,
											"end": 5289,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5051,
											"end": 5289,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5051,
											"end": 5289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 5051,
											"end": 5289,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2543,
											"end": 2670,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2543,
											"end": 2670,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2543,
											"end": 2670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2543,
											"end": 2670,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2670,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2543,
											"end": 2670,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2543,
											"end": 2670,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2543,
											"end": 2670,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2543,
											"end": 2670,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1462,
											"end": 1566,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1462,
											"end": 1566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1462,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1462,
											"end": 1566,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5792,
											"end": 6228,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 5792,
											"end": 6228,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5792,
											"end": 6228,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5792,
											"end": 6228,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 5792,
											"end": 6228,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5792,
											"end": 6228,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5792,
											"end": 6228,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 5792,
											"end": 6228,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5792,
											"end": 6228,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 5792,
											"end": 6228,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5792,
											"end": 6228,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 5792,
											"end": 6228,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2876,
											"end": 3069,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2876,
											"end": 3069,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2876,
											"end": 3069,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2876,
											"end": 3069,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2876,
											"end": 3069,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2876,
											"end": 3069,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2876,
											"end": 3069,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2876,
											"end": 3069,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2876,
											"end": 3069,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2876,
											"end": 3069,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2876,
											"end": 3069,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2876,
											"end": 3069,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 770,
											"end": 791,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 770,
											"end": 791,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 770,
											"end": 791,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 770,
											"end": 791,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 770,
											"end": 791,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 770,
											"end": 791,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 770,
											"end": 791,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 770,
											"end": 791,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 770,
											"end": 791,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 770,
											"end": 791,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 770,
											"end": 791,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 770,
											"end": 791,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 770,
											"end": 791,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1444,
											"end": 1476,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1444,
											"end": 1476,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1444,
											"end": 1476,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1426,
											"end": 1477,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1426,
											"end": 1477,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1414,
											"end": 1416,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1399,
											"end": 1417,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 770,
											"end": 791,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1381,
											"end": 1483,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3132,
											"end": 3283,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 3132,
											"end": 3283,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3132,
											"end": 3283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3132,
											"end": 3283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 3132,
											"end": 3283,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3132,
											"end": 3283,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3132,
											"end": 3283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 3132,
											"end": 3283,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3132,
											"end": 3283,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 3132,
											"end": 3283,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3132,
											"end": 3283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 3132,
											"end": 3283,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1243,
											"end": 1343,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1243,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1310,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1330,
											"end": 1335,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1243,
											"end": 1343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1243,
											"end": 1343,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3603,
											"end": 3801,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 3603,
											"end": 3801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3686,
											"end": 3690,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3719,
											"end": 3728,
											"name": "ORIGIN",
											"source": 0
										},
										{
											"begin": 3739,
											"end": 3771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 3719,
											"end": 3728,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3755,
											"end": 3762,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3764,
											"end": 3770,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3739,
											"end": 3747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 3739,
											"end": 3771,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3739,
											"end": 3771,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 3739,
											"end": 3771,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3789,
											"end": 3793,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3789,
											"end": 3793,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3603,
											"end": 3801,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3603,
											"end": 3801,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4381,
											"end": 4642,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 4381,
											"end": 4642,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4478,
											"end": 4482,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 4536,
											"end": 4574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 4552,
											"end": 4556,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4567,
											"end": 4573,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 4551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 4536,
											"end": 4574,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4536,
											"end": 4574,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 4536,
											"end": 4574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4585,
											"end": 4612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 4595,
											"end": 4599,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4601,
											"end": 4603,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4605,
											"end": 4611,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4585,
											"end": 4594,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 4585,
											"end": 4612,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4585,
											"end": 4612,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 4585,
											"end": 4612,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4630,
											"end": 4634,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4630,
											"end": 4634,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 4381,
											"end": 4642,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4381,
											"end": 4642,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5051,
											"end": 5289,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 5051,
											"end": 5289,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5139,
											"end": 5143,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 5195,
											"end": 5259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5211,
											"end": 5218,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5248,
											"end": 5258,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5220,
											"end": 5245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5211,
											"end": 5218,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5220,
											"end": 5229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 5220,
											"end": 5245,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5220,
											"end": 5245,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 5220,
											"end": 5245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5220,
											"end": 5258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 5220,
											"end": 5258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5220,
											"end": 5258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5220,
											"end": 5258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 5220,
											"end": 5258,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5220,
											"end": 5258,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 5220,
											"end": 5258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5195,
											"end": 5203,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 5195,
											"end": 5259,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2543,
											"end": 2670,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2543,
											"end": 2670,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2644,
											"end": 2662,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2644,
											"end": 2662,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2617,
											"end": 2624,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2644,
											"end": 2662,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2644,
											"end": 2662,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2644,
											"end": 2662,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2644,
											"end": 2662,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2644,
											"end": 2662,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2644,
											"end": 2662,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2644,
											"end": 2662,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2644,
											"end": 2662,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2644,
											"end": 2662,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2644,
											"end": 2662,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2644,
											"end": 2662,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2670,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2543,
											"end": 2670,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2670,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2670,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2670,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2670,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1462,
											"end": 1566,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1462,
											"end": 1566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1518,
											"end": 1531,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1551,
											"end": 1558,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1544,
											"end": 1558,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1544,
											"end": 1558,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1544,
											"end": 1558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1544,
											"end": 1558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1544,
											"end": 1558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1544,
											"end": 1558,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5792,
											"end": 6228,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 5792,
											"end": 6228,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5885,
											"end": 5889,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 5885,
											"end": 5889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5968,
											"end": 5993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5985,
											"end": 5992,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 5968,
											"end": 5977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 5968,
											"end": 5993,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5968,
											"end": 5993,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 5968,
											"end": 5993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5941,
											"end": 5993,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5941,
											"end": 5993,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6032,
											"end": 6047,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6012,
											"end": 6028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6012,
											"end": 6047,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6012,
											"end": 6047,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6004,
											"end": 6089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 6004,
											"end": 6089,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6004,
											"end": 6089,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6004,
											"end": 6089,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6004,
											"end": 6089,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6004,
											"end": 6089,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4873,
											"end": 4875,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6004,
											"end": 6089,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6004,
											"end": 6089,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6004,
											"end": 6089,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4855,
											"end": 4876,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4912,
											"end": 4914,
											"name": "PUSH",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 4892,
											"end": 4910,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 4892,
											"end": 4910,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4892,
											"end": 4910,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4885,
											"end": 4915,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4951,
											"end": 4985,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 4931,
											"end": 4949,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 4931,
											"end": 4949,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4931,
											"end": 4949,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4924,
											"end": 4986,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5002,
											"end": 5020,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 5002,
											"end": 5020,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5002,
											"end": 5020,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4995,
											"end": 5030,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5047,
											"end": 5066,
											"name": "PUSH",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 5047,
											"end": 5066,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6004,
											"end": 6089,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 6004,
											"end": 6089,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6004,
											"end": 6089,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6004,
											"end": 6089,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6004,
											"end": 6089,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6004,
											"end": 6089,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6004,
											"end": 6089,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6004,
											"end": 6089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6004,
											"end": 6089,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6004,
											"end": 6089,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 6004,
											"end": 6089,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6125,
											"end": 6185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 6134,
											"end": 6139,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6141,
											"end": 6148,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6169,
											"end": 6184,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6150,
											"end": 6166,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6150,
											"end": 6184,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6125,
											"end": 6133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 6125,
											"end": 6185,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2876,
											"end": 3069,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2876,
											"end": 3069,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2955,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 3011,
											"end": 3039,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3028,
											"end": 3030,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3032,
											"end": 3038,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3011,
											"end": 3020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 3011,
											"end": 3039,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3132,
											"end": 3283,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 3132,
											"end": 3283,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3248,
											"end": 3266,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3248,
											"end": 3266,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3248,
											"end": 3266,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3221,
											"end": 3228,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3266,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3248,
											"end": 3266,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3248,
											"end": 3266,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3248,
											"end": 3259,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3248,
											"end": 3266,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3248,
											"end": 3266,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3248,
											"end": 3266,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3248,
											"end": 3266,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3248,
											"end": 3266,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3248,
											"end": 3266,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3248,
											"end": 3266,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3248,
											"end": 3266,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3248,
											"end": 3275,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3248,
											"end": 3275,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3248,
											"end": 3275,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 3248,
											"end": 3275,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3248,
											"end": 3275,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3248,
											"end": 3275,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3248,
											"end": 3275,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3248,
											"end": 3275,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3248,
											"end": 3275,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3248,
											"end": 3275,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3248,
											"end": 3275,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3248,
											"end": 3275,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3248,
											"end": 3275,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3132,
											"end": 3283,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9785,
											"end": 10131,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 9785,
											"end": 10131,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9887,
											"end": 9906,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9887,
											"end": 9906,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9879,
											"end": 9947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 9879,
											"end": 9947,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9879,
											"end": 9947,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9879,
											"end": 9947,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9879,
											"end": 9947,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9879,
											"end": 9947,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4468,
											"end": 4470,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9879,
											"end": 9947,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9879,
											"end": 9947,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9879,
											"end": 9947,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4450,
											"end": 4471,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4507,
											"end": 4509,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 4487,
											"end": 4505,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4487,
											"end": 4505,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4487,
											"end": 4505,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4480,
											"end": 4510,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4546,
											"end": 4580,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 4526,
											"end": 4544,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 4526,
											"end": 4544,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4526,
											"end": 4544,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4519,
											"end": 4581,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4597,
											"end": 4615,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 4597,
											"end": 4615,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4597,
											"end": 4615,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4590,
											"end": 4624,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4641,
											"end": 4660,
											"name": "PUSH",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 4641,
											"end": 4660,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9879,
											"end": 9947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 4440,
											"end": 4666,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9879,
											"end": 9947,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 9879,
											"end": 9947,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9966,
											"end": 9987,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9966,
											"end": 9987,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9958,
											"end": 10026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 9958,
											"end": 10026,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9958,
											"end": 10026,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9958,
											"end": 10026,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9958,
											"end": 10026,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9958,
											"end": 10026,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2894,
											"end": 2896,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9958,
											"end": 10026,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9958,
											"end": 10026,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9958,
											"end": 10026,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2876,
											"end": 2897,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 2935,
											"name": "PUSH",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 2913,
											"end": 2931,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2913,
											"end": 2931,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2913,
											"end": 2931,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2906,
											"end": 2936,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2972,
											"end": 3006,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 2952,
											"end": 2970,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2952,
											"end": 2970,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2952,
											"end": 2970,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2945,
											"end": 3007,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3023,
											"end": 3041,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 3023,
											"end": 3041,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3023,
											"end": 3041,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3016,
											"end": 3048,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3065,
											"end": 3084,
											"name": "PUSH",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 3065,
											"end": 3084,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9958,
											"end": 10026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2866,
											"end": 3090,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9958,
											"end": 10026,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 9958,
											"end": 10026,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10050,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10066,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10066,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10066,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10066,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10066,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10066,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10066,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10066,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10066,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10066,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10066,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10066,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10066,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10075,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10075,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10075,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10091,
											"end": 10123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10091,
											"end": 10123,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5223,
											"end": 5248,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5223,
											"end": 5248,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5223,
											"end": 5248,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10091,
											"end": 10123,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10091,
											"end": 10123,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5196,
											"end": 5214,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10091,
											"end": 10123,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10091,
											"end": 10123,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10091,
											"end": 10123,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10091,
											"end": 10123,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10091,
											"end": 10123,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10091,
											"end": 10123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10091,
											"end": 10123,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 9785,
											"end": 10131,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9785,
											"end": 10131,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9785,
											"end": 10131,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9785,
											"end": 10131,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10422,
											"end": 10841,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 10422,
											"end": 10841,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10523,
											"end": 10547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10550,
											"end": 10575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 10560,
											"end": 10565,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10567,
											"end": 10574,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10550,
											"end": 10559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 10550,
											"end": 10575,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10550,
											"end": 10575,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 10550,
											"end": 10575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10523,
											"end": 10575,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10523,
											"end": 10575,
											"name": "POP",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10590,
											"end": 10606,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10590,
											"end": 10627,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10586,
											"end": 10834,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 10586,
											"end": 10834,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10672,
											"end": 10678,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10652,
											"end": 10668,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10652,
											"end": 10678,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 10652,
											"end": 10678,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10644,
											"end": 10712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 10644,
											"end": 10712,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10644,
											"end": 10712,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10644,
											"end": 10712,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10644,
											"end": 10712,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10644,
											"end": 10712,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3297,
											"end": 3299,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10644,
											"end": 10712,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10644,
											"end": 10712,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10644,
											"end": 10712,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3279,
											"end": 3300,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3336,
											"end": 3338,
											"name": "PUSH",
											"source": 4,
											"value": "1D"
										},
										{
											"begin": 3316,
											"end": 3334,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3316,
											"end": 3334,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3316,
											"end": 3334,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3309,
											"end": 3339,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3375,
											"end": 3406,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 3355,
											"end": 3373,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 3355,
											"end": 3373,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3355,
											"end": 3373,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3348,
											"end": 3407,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3424,
											"end": 3442,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 3424,
											"end": 3442,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10644,
											"end": 10712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 3269,
											"end": 3448,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10644,
											"end": 10712,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 10644,
											"end": 10712,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10756,
											"end": 10807,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 10765,
											"end": 10770,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10772,
											"end": 10779,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10800,
											"end": 10806,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10781,
											"end": 10797,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10781,
											"end": 10806,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10756,
											"end": 10764,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 10756,
											"end": 10807,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10756,
											"end": 10807,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 10756,
											"end": 10807,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10422,
											"end": 10841,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10422,
											"end": 10841,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10422,
											"end": 10841,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10422,
											"end": 10841,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10422,
											"end": 10841,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6698,
											"end": 7504,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 6698,
											"end": 7504,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6795,
											"end": 6813,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6795,
											"end": 6813,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6787,
											"end": 6855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 6787,
											"end": 6855,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6787,
											"end": 6855,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6787,
											"end": 6855,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6787,
											"end": 6855,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6787,
											"end": 6855,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4062,
											"end": 4064,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6787,
											"end": 6855,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6787,
											"end": 6855,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6787,
											"end": 6855,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4044,
											"end": 4065,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4101,
											"end": 4103,
											"name": "PUSH",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 4081,
											"end": 4099,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 4081,
											"end": 4099,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4081,
											"end": 4099,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4074,
											"end": 4104,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4140,
											"end": 4174,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 4120,
											"end": 4138,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 4120,
											"end": 4138,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4120,
											"end": 4138,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4113,
											"end": 4175,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4191,
											"end": 4209,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 4191,
											"end": 4209,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4191,
											"end": 4209,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4184,
											"end": 4219,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4236,
											"end": 4255,
											"name": "PUSH",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 4236,
											"end": 4255,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6787,
											"end": 6855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 4034,
											"end": 4261,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6787,
											"end": 6855,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 6787,
											"end": 6855,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6874,
											"end": 6890,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6874,
											"end": 6890,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 6866,
											"end": 6930,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6866,
											"end": 6930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6866,
											"end": 6930,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6930,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2492,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6930,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6866,
											"end": 6930,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6930,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2472,
											"end": 2493,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2529,
											"end": 2531,
											"name": "PUSH",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 2509,
											"end": 2527,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2509,
											"end": 2527,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2527,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2502,
											"end": 2532,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2568,
											"end": 2602,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 2548,
											"end": 2566,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2548,
											"end": 2566,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2548,
											"end": 2566,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2541,
											"end": 2603,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2619,
											"end": 2637,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2619,
											"end": 2637,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2619,
											"end": 2637,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2612,
											"end": 2645,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2681,
											"name": "PUSH",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 2662,
											"end": 2681,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6866,
											"end": 6930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2462,
											"end": 2687,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6866,
											"end": 6930,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 6866,
											"end": 6930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7016,
											"end": 7031,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7031,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6994,
											"end": 7013,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7016,
											"end": 7031,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7031,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7031,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7031,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7016,
											"end": 7031,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7031,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7031,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7031,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7016,
											"end": 7031,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7031,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7031,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7050,
											"end": 7071,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7050,
											"end": 7071,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7050,
											"end": 7071,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7050,
											"end": 7071,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7042,
											"end": 7114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 7042,
											"end": 7114,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7042,
											"end": 7114,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7042,
											"end": 7114,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7042,
											"end": 7114,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7042,
											"end": 7114,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3655,
											"end": 3657,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7042,
											"end": 7114,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7042,
											"end": 7114,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7042,
											"end": 7114,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3637,
											"end": 3658,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3694,
											"end": 3696,
											"name": "PUSH",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 3674,
											"end": 3692,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3674,
											"end": 3692,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3674,
											"end": 3692,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3733,
											"end": 3767,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 3713,
											"end": 3731,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 3713,
											"end": 3731,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3713,
											"end": 3731,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3706,
											"end": 3768,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3784,
											"end": 3802,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 3784,
											"end": 3802,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3784,
											"end": 3802,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3777,
											"end": 3813,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3830,
											"end": 3849,
											"name": "PUSH",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 3830,
											"end": 3849,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7042,
											"end": 7114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 3627,
											"end": 3855,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7042,
											"end": 7114,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 7042,
											"end": 7114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7150,
											"end": 7165,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7150,
											"end": 7165,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7150,
											"end": 7165,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7150,
											"end": 7159,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7150,
											"end": 7165,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7150,
											"end": 7165,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7150,
											"end": 7165,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7150,
											"end": 7165,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7150,
											"end": 7165,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7150,
											"end": 7165,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7150,
											"end": 7165,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7150,
											"end": 7165,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7150,
											"end": 7165,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7150,
											"end": 7165,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7150,
											"end": 7165,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7168,
											"end": 7188,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7168,
											"end": 7188,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7168,
											"end": 7188,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7150,
											"end": 7188,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7150,
											"end": 7188,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7381,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7381,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7381,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7381,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7381,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7381,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7381,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7381,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7381,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7381,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7420,
											"end": 7446,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7420,
											"end": 7446,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5223,
											"end": 5248,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5223,
											"end": 5248,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5223,
											"end": 5248,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7368,
											"end": 7381,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7381,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7420,
											"end": 7446,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7420,
											"end": 7446,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5196,
											"end": 5214,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7420,
											"end": 7446,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7420,
											"end": 7446,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7420,
											"end": 7446,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7420,
											"end": 7446,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7420,
											"end": 7446,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7420,
											"end": 7446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7420,
											"end": 7446,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 7459,
											"end": 7496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 11441,
											"end": 11532,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 111,
											"end": 113,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 111,
											"end": 113,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 192,
											"end": 388,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 192,
											"end": 388,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 192,
											"end": 388,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 301,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 283,
											"end": 290,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 275,
											"end": 307,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 272,
											"end": 274,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 272,
											"end": 274,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 272,
											"end": 274,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 325,
											"end": 331,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 317,
											"end": 323,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 310,
											"end": 332,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 272,
											"end": 274,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 272,
											"end": 274,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 353,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 372,
											"end": 381,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 353,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 353,
											"end": 382,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 353,
											"end": 382,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 353,
											"end": 382,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 343,
											"end": 382,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 262,
											"end": 388,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 262,
											"end": 388,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 393,
											"end": 663,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 393,
											"end": 663,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 393,
											"end": 663,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 393,
											"end": 663,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 522,
											"end": 524,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 510,
											"end": 519,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 501,
											"end": 508,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 497,
											"end": 520,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 493,
											"end": 525,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 490,
											"end": 492,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 490,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 490,
											"end": 492,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 543,
											"end": 549,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 535,
											"end": 541,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 528,
											"end": 550,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 490,
											"end": 492,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 490,
											"end": 492,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 571,
											"end": 600,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 590,
											"end": 599,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 571,
											"end": 600,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 571,
											"end": 600,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 571,
											"end": 600,
											"name": "tag",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 571,
											"end": 600,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 561,
											"end": 600,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 561,
											"end": 600,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 619,
											"end": 657,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 653,
											"end": 655,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 642,
											"end": 651,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 638,
											"end": 656,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 619,
											"end": 657,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 619,
											"end": 657,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 619,
											"end": 657,
											"name": "tag",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 619,
											"end": 657,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 609,
											"end": 657,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 609,
											"end": 657,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 480,
											"end": 663,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 480,
											"end": 663,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 480,
											"end": 663,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 480,
											"end": 663,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 480,
											"end": 663,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 480,
											"end": 663,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 668,
											"end": 1006,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 668,
											"end": 1006,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 668,
											"end": 1006,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 668,
											"end": 1006,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 668,
											"end": 1006,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 814,
											"end": 816,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 802,
											"end": 811,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 793,
											"end": 800,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 789,
											"end": 812,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 785,
											"end": 817,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 782,
											"end": 784,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 782,
											"end": 784,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 782,
											"end": 784,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 835,
											"end": 841,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 827,
											"end": 833,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 820,
											"end": 842,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 782,
											"end": 784,
											"name": "tag",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 782,
											"end": 784,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 863,
											"end": 892,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 882,
											"end": 891,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 863,
											"end": 892,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 863,
											"end": 892,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 863,
											"end": 892,
											"name": "tag",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 863,
											"end": 892,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 853,
											"end": 892,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 853,
											"end": 892,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 911,
											"end": 949,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 945,
											"end": 947,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 934,
											"end": 943,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 930,
											"end": 948,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 911,
											"end": 949,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 911,
											"end": 949,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 911,
											"end": 949,
											"name": "tag",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 911,
											"end": 949,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 901,
											"end": 949,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 901,
											"end": 949,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 996,
											"end": 998,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 985,
											"end": 994,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 981,
											"end": 999,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 968,
											"end": 1000,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 958,
											"end": 1000,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 958,
											"end": 1000,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 772,
											"end": 1006,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 772,
											"end": 1006,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 772,
											"end": 1006,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 772,
											"end": 1006,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 772,
											"end": 1006,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 772,
											"end": 1006,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1011,
											"end": 1275,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 1011,
											"end": 1275,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1011,
											"end": 1275,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1011,
											"end": 1275,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1140,
											"end": 1142,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1128,
											"end": 1137,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1119,
											"end": 1126,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1115,
											"end": 1138,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1108,
											"end": 1110,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1108,
											"end": 1110,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 1108,
											"end": 1110,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1161,
											"end": 1167,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1159,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1146,
											"end": 1168,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1108,
											"end": 1110,
											"name": "tag",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 1108,
											"end": 1110,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1189,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 1208,
											"end": 1217,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1189,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 1189,
											"end": 1218,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1189,
											"end": 1218,
											"name": "tag",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 1189,
											"end": 1218,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1179,
											"end": 1218,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 1265,
											"end": 1267,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1250,
											"end": 1268,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1250,
											"end": 1268,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1250,
											"end": 1268,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1250,
											"end": 1268,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1237,
											"end": 1269,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1237,
											"end": 1269,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1098,
											"end": 1275,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1680,
											"end": 2283,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 1680,
											"end": 2283,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 2283,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1821,
											"end": 1823,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1850,
											"end": 1852,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1839,
											"end": 1848,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1832,
											"end": 1853,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1882,
											"end": 1888,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1876,
											"end": 1889,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1925,
											"end": 1931,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 1922,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1909,
											"end": 1918,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1905,
											"end": 1923,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1898,
											"end": 1932,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1950,
											"end": 1954,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1963,
											"end": 2103,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 1963,
											"end": 2103,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1977,
											"end": 1983,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1974,
											"end": 1975,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1971,
											"end": 1984,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1963,
											"end": 2103,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1963,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 1963,
											"end": 2103,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2072,
											"end": 2086,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2072,
											"end": 2086,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2072,
											"end": 2086,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2068,
											"end": 2091,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2068,
											"end": 2091,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2062,
											"end": 2092,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2038,
											"end": 2055,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2038,
											"end": 2055,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2038,
											"end": 2055,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2057,
											"end": 2059,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2060,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2027,
											"end": 2093,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1963,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 1963,
											"end": 2103,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1963,
											"end": 2103,
											"name": "tag",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 1963,
											"end": 2103,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2121,
											"end": 2127,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2119,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2115,
											"end": 2128,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2112,
											"end": 2114,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2112,
											"end": 2114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 2112,
											"end": 2114,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2191,
											"end": 2195,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2186,
											"end": 2188,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2177,
											"end": 2183,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2166,
											"end": 2175,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2162,
											"end": 2184,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2158,
											"end": 2189,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2151,
											"end": 2196,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2112,
											"end": 2114,
											"name": "tag",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 2112,
											"end": 2114,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2267,
											"end": 2269,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2246,
											"end": 2261,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2242,
											"end": 2271,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2227,
											"end": 2272,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2227,
											"end": 2272,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2227,
											"end": 2272,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2227,
											"end": 2272,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2274,
											"end": 2276,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2223,
											"end": 2277,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2223,
											"end": 2277,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 2283,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1801,
											"end": 2283,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5448,
											"end": 5677,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 5448,
											"end": 5677,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5448,
											"end": 5677,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5519,
											"end": 5520,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5515,
											"end": 5521,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 5512,
											"end": 5513,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5509,
											"end": 5522,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 5506,
											"end": 5508,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5506,
											"end": 5508,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 5506,
											"end": 5508,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5545,
											"end": 5578,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5545,
											"end": 5578,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5601,
											"end": 5605,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 5598,
											"end": 5599,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5591,
											"end": 5606,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5631,
											"end": 5635,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 5552,
											"end": 5555,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5619,
											"end": 5636,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5506,
											"end": 5508,
											"name": "tag",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 5506,
											"end": 5508,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5662,
											"end": 5671,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5662,
											"end": 5671,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5496,
											"end": 5677,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5682,
											"end": 6062,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 5682,
											"end": 6062,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5761,
											"end": 5762,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5757,
											"end": 5769,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5757,
											"end": 5769,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5757,
											"end": 5769,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 5757,
											"end": 5769,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5804,
											"end": 5816,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5804,
											"end": 5816,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5804,
											"end": 5816,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5825,
											"end": 5827,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 5825,
											"end": 5827,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5879,
											"end": 5883,
											"name": "PUSH",
											"source": 4,
											"value": "7F"
										},
										{
											"begin": 5871,
											"end": 5877,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5867,
											"end": 5884,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5857,
											"end": 5884,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5857,
											"end": 5884,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5825,
											"end": 5827,
											"name": "tag",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 5825,
											"end": 5827,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5932,
											"end": 5934,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5924,
											"end": 5930,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5921,
											"end": 5935,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 5901,
											"end": 5919,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5898,
											"end": 5936,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 5895,
											"end": 5897,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5895,
											"end": 5897,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 5895,
											"end": 5897,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5978,
											"end": 5988,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B71"
										},
										{
											"begin": 5973,
											"end": 5976,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 5969,
											"end": 5989,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 5966,
											"end": 5967,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5959,
											"end": 5990,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6013,
											"end": 6017,
											"name": "PUSH",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 6010,
											"end": 6011,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6003,
											"end": 6018,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6041,
											"end": 6045,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 6038,
											"end": 6039,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6031,
											"end": 6046,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5895,
											"end": 5897,
											"name": "tag",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 5895,
											"end": 5897,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5895,
											"end": 5897,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5737,
											"end": 6062,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5737,
											"end": 6062,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5737,
											"end": 6062,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5737,
											"end": 6062,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"_owner()": "b2bdfa7b",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"TOkenAERC20.sol\":\"TOkenAERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"TOkenAERC20.sol\":{\"keccak256\":\"0xf72e772fe1a8b2127f87dd82403f4102dff6e78844e4bbd5f410618e5250978c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d32b4a36d8517d5deb708fe92ced4f55617509d27a244e26106631c635e37a2\",\"dweb:/ipfs/QmPUiAhCRaKLsqn3WSXGVsRCZBaEnEDfqhkzojpiSJpzKh\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1\",\"dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 14,
								"contract": "TOkenAERC20.sol:TOkenAERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 20,
								"contract": "TOkenAERC20.sol:TOkenAERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 22,
								"contract": "TOkenAERC20.sol:TOkenAERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 24,
								"contract": "TOkenAERC20.sol:TOkenAERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 26,
								"contract": "TOkenAERC20.sol:TOkenAERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 28,
								"contract": "TOkenAERC20.sol:TOkenAERC20",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1\",\"dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1\",\"dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"TOkenAERC20.sol": {
				"ast": {
					"absolutePath": "TOkenAERC20.sol",
					"exportedSymbols": {
						"Context": [
							723
						],
						"IERC20": [
							676
						],
						"IERC20Metadata": [
							701
						],
						"TOkenAERC20": [
							598
						]
					},
					"id": 599,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:0"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 599,
							"sourceUnit": 677,
							"src": "135:109:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 599,
							"sourceUnit": 702,
							"src": "246:128:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 599,
							"sourceUnit": 724,
							"src": "376:104:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 723,
										"src": "508:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "508:7:0"
								},
								{
									"baseName": {
										"id": 7,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 676,
										"src": "517:6:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "517:6:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "IERC20Metadata",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 701,
										"src": "525:14:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "525:14:0"
								}
							],
							"contractDependencies": [
								676,
								701,
								723
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 598,
							"linearizedBaseContracts": [
								598,
								701,
								676,
								723
							],
							"name": "TOkenAERC20",
							"nameLocation": "493:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 14,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "583:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 598,
									"src": "547:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 13,
										"keyType": {
											"id": 11,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "555:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "547:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 12,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "566:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 20,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "657:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 598,
									"src": "601:67:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 19,
										"keyType": {
											"id": 15,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "609:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "601:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 18,
											"keyType": {
												"id": 16,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "628:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "620:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 17,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "639:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 22,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "693:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 598,
									"src": "677:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 21,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "677:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 24,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "729:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 598,
									"src": "714:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 23,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "714:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 26,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "756:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 598,
									"src": "741:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 25,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "741:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "b2bdfa7b",
									"id": 28,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "785:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 598,
									"src": "770:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 27,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "770:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 55,
										"nodeType": "Block",
										"src": "996:177:0",
										"statements": [
											{
												"expression": {
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 32,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "1007:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "546573745f756e69737761705f546f6b656e41",
														"id": 33,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1015:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_bd38d9c86fc2141abb5a16d60cc687419e58b8712df581daa770a53bbedd8f1a",
															"typeString": "literal_string \"Test_uniswap_TokenA\""
														},
														"value": "Test_uniswap_TokenA"
													},
													"src": "1007:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 35,
												"nodeType": "ExpressionStatement",
												"src": "1007:29:0"
											},
											{
												"expression": {
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 36,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "1047:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "545541",
														"id": 37,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1057:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_fbe3a3fa3508561d90caccfd9e3a5fc8f4f27c3cc4cb437490d09b5a86606e06",
															"typeString": "literal_string \"TUA\""
														},
														"value": "TUA"
													},
													"src": "1047:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 39,
												"nodeType": "ExpressionStatement",
												"src": "1047:15:0"
											},
											{
												"expression": {
													"id": 43,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 40,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "1073:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 41,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1080:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 42,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1080:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1073:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 44,
												"nodeType": "ExpressionStatement",
												"src": "1073:17:0"
											},
											{
												"expression": {
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 45,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 22,
														"src": "1101:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3130303030303030",
														"id": 46,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1114:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000000_by_1",
															"typeString": "int_const 10000000"
														},
														"value": "10000000"
													},
													"src": "1101:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1101:21:0"
											},
											{
												"expression": {
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 49,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 14,
															"src": "1133:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 51,
														"indexExpression": {
															"id": 50,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 28,
															"src": "1143:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1133:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 52,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 22,
														"src": "1151:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1133:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 54,
												"nodeType": "ExpressionStatement",
												"src": "1133:30:0"
											}
										]
									},
									"documentation": {
										"id": 29,
										"nodeType": "StructuredDocumentation",
										"src": "800:176:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 56,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "993:2:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "996:0:0"
									},
									"scope": 598,
									"src": "982:191:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										688
									],
									"body": {
										"id": 65,
										"nodeType": "Block",
										"src": "1312:31:0",
										"statements": [
											{
												"expression": {
													"id": 63,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 24,
													"src": "1330:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 62,
												"id": 64,
												"nodeType": "Return",
												"src": "1323:12:0"
											}
										]
									},
									"documentation": {
										"id": 57,
										"nodeType": "StructuredDocumentation",
										"src": "1181:56:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 66,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1252:4:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 59,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1279:8:0"
									},
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1256:2:0"
									},
									"returnParameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "1297:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 60,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1297:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1296:15:0"
									},
									"scope": 598,
									"src": "1243:100:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										694
									],
									"body": {
										"id": 75,
										"nodeType": "Block",
										"src": "1533:33:0",
										"statements": [
											{
												"expression": {
													"id": 73,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 26,
													"src": "1551:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 72,
												"id": 74,
												"nodeType": "Return",
												"src": "1544:14:0"
											}
										]
									},
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "1351:105:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 76,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1471:6:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 69,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1500:8:0"
									},
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1477:2:0"
									},
									"returnParameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "1518:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 70,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1518:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1517:15:0"
									},
									"scope": 598,
									"src": "1462:104:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										700
									],
									"body": {
										"id": 85,
										"nodeType": "Block",
										"src": "2279:28:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 83,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2297:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 82,
												"id": 84,
												"nodeType": "Return",
												"src": "2290:9:0"
											}
										]
									},
									"documentation": {
										"id": 77,
										"nodeType": "StructuredDocumentation",
										"src": "1574:634:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 86,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2223:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 79,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2254:8:0"
									},
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2231:2:0"
									},
									"returnParameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "2272:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 80,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2272:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2271:7:0"
									},
									"scope": 598,
									"src": "2214:93:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										625
									],
									"body": {
										"id": 95,
										"nodeType": "Block",
										"src": "2442:38:0",
										"statements": [
											{
												"expression": {
													"id": 93,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 22,
													"src": "2460:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 92,
												"id": 94,
												"nodeType": "Return",
												"src": "2453:19:0"
											}
										]
									},
									"documentation": {
										"id": 87,
										"nodeType": "StructuredDocumentation",
										"src": "2315:51:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 96,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2381:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 89,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2415:8:0"
									},
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2392:2:0"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "2433:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 90,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2433:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2432:9:0"
									},
									"scope": 598,
									"src": "2372:108:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										633
									],
									"body": {
										"id": 109,
										"nodeType": "Block",
										"src": "2626:44:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 105,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "2644:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 107,
													"indexExpression": {
														"id": 106,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 99,
														"src": "2654:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2644:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 104,
												"id": 108,
												"nodeType": "Return",
												"src": "2637:25:0"
											}
										]
									},
									"documentation": {
										"id": 97,
										"nodeType": "StructuredDocumentation",
										"src": "2488:49:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2552:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 101,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2599:8:0"
									},
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2570:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "2562:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 98,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2562:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2561:17:0"
									},
									"returnParameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "2617:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 102,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2617:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2616:9:0"
									},
									"scope": 598,
									"src": "2543:127:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										643
									],
									"body": {
										"id": 134,
										"nodeType": "Block",
										"src": "2961:108:0",
										"statements": [
											{
												"assignments": [
													122
												],
												"declarations": [
													{
														"constant": false,
														"id": 122,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "2980:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 134,
														"src": "2972:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 121,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2972:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 125,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 123,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 713,
														"src": "2988:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2988:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2972:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 127,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 122,
															"src": "3021:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 128,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 113,
															"src": "3028:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 129,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 115,
															"src": "3032:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 126,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 358,
														"src": "3011:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3011:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 131,
												"nodeType": "ExpressionStatement",
												"src": "3011:28:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 132,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3057:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 120,
												"id": 133,
												"nodeType": "Return",
												"src": "3050:11:0"
											}
										]
									},
									"documentation": {
										"id": 111,
										"nodeType": "StructuredDocumentation",
										"src": "2678:192:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 135,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "2885:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 117,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2937:8:0"
									},
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2902:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "2894:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2894:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2914:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "2906:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2906:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2893:28:0"
									},
									"returnParameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "2955:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 118,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2955:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2954:6:0"
									},
									"scope": 598,
									"src": "2876:193:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										653
									],
									"body": {
										"id": 152,
										"nodeType": "Block",
										"src": "3230:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 146,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 20,
															"src": "3248:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 148,
														"indexExpression": {
															"id": 147,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 138,
															"src": "3260:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3248:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 150,
													"indexExpression": {
														"id": 149,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 140,
														"src": "3267:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3248:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 145,
												"id": 151,
												"nodeType": "Return",
												"src": "3241:34:0"
											}
										]
									},
									"documentation": {
										"id": 136,
										"nodeType": "StructuredDocumentation",
										"src": "3077:49:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 153,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3141:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 142,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3203:8:0"
									},
									"parameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3159:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "3151:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 137,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3151:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3174:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "3166:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 139,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3166:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3150:32:0"
									},
									"returnParameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "3221:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3221:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3220:9:0"
									},
									"scope": 598,
									"src": "3132:151:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										663
									],
									"body": {
										"id": 177,
										"nodeType": "Block",
										"src": "3692:109:0",
										"statements": [
											{
												"assignments": [
													165
												],
												"declarations": [
													{
														"constant": false,
														"id": 165,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3711:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 177,
														"src": "3703:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 164,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3703:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 168,
												"initialValue": {
													"expression": {
														"id": 166,
														"name": "tx",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967270,
														"src": "3719:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_transaction",
															"typeString": "tx"
														}
													},
													"id": 167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "origin",
													"nodeType": "MemberAccess",
													"src": "3719:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3703:25:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 170,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "3748:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 171,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 156,
															"src": "3755:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 172,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 158,
															"src": "3764:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 169,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "3739:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3739:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 174,
												"nodeType": "ExpressionStatement",
												"src": "3739:32:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 175,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3789:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 163,
												"id": 176,
												"nodeType": "Return",
												"src": "3782:11:0"
											}
										]
									},
									"documentation": {
										"id": 154,
										"nodeType": "StructuredDocumentation",
										"src": "3291:306:0",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 178,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3612:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 160,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3668:8:0"
									},
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3628:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "3620:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3620:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3645:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "3637:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3637:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3619:33:0"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "3686:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 161,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3686:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3685:6:0"
									},
									"scope": 598,
									"src": "3603:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										675
									],
									"body": {
										"id": 210,
										"nodeType": "Block",
										"src": "4484:158:0",
										"statements": [
											{
												"assignments": [
													192
												],
												"declarations": [
													{
														"constant": false,
														"id": 192,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4503:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 210,
														"src": "4495:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 191,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4495:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 195,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 193,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 713,
														"src": "4513:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4513:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4495:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 197,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 181,
															"src": "4552:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 198,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "4558:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 199,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "4567:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 196,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 575,
														"src": "4536:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4536:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 201,
												"nodeType": "ExpressionStatement",
												"src": "4536:38:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 203,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 181,
															"src": "4595:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 204,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 183,
															"src": "4601:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 205,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "4605:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 202,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 358,
														"src": "4585:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4585:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 207,
												"nodeType": "ExpressionStatement",
												"src": "4585:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4630:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 190,
												"id": 209,
												"nodeType": "Return",
												"src": "4623:11:0"
											}
										]
									},
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "3809:566:0",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4390:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 187,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4460:8:0"
									},
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4411:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "4403:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4425:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "4417:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4417:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4437:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "4429:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4429:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4402:42:0"
									},
									"returnParameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "4478:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 188,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4478:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4477:6:0"
									},
									"scope": 598,
									"src": "4381:261:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 239,
										"nodeType": "Block",
										"src": "5145:144:0",
										"statements": [
											{
												"assignments": [
													222
												],
												"declarations": [
													{
														"constant": false,
														"id": 222,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "5164:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 239,
														"src": "5156:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 221,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5156:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 225,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 223,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 713,
														"src": "5172:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5172:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5156:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 227,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 222,
															"src": "5204:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 228,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "5211:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 234,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 230,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "5230:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 231,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 214,
																		"src": "5237:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 229,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 153,
																	"src": "5220:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 232,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5220:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 233,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 216,
																"src": "5248:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5220:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 226,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "5195:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5195:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 236,
												"nodeType": "ExpressionStatement",
												"src": "5195:64:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 237,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5277:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 220,
												"id": 238,
												"nodeType": "Return",
												"src": "5270:11:0"
											}
										]
									},
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "4650:395:0",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 240,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "5060:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5086:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "5078:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5078:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "5103:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "5095:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5095:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5077:37:0"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "5139:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 218,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5139:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5138:6:0"
									},
									"scope": 598,
									"src": "5051:238:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 280,
										"nodeType": "Block",
										"src": "5891:337:0",
										"statements": [
											{
												"assignments": [
													251
												],
												"declarations": [
													{
														"constant": false,
														"id": 251,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "5910:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 280,
														"src": "5902:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 250,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5902:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 254,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 252,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 713,
														"src": "5918:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5918:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5902:28:0"
											},
											{
												"assignments": [
													256
												],
												"declarations": [
													{
														"constant": false,
														"id": 256,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "5949:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 280,
														"src": "5941:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 255,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5941:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 261,
												"initialValue": {
													"arguments": [
														{
															"id": 258,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 251,
															"src": "5978:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 259,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 243,
															"src": "5985:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 257,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 153,
														"src": "5968:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5968:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5941:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 265,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 263,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 256,
																"src": "6012:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 264,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 245,
																"src": "6032:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6012:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 266,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6049:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 262,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6004:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6004:85:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 268,
												"nodeType": "ExpressionStatement",
												"src": "6004:85:0"
											},
											{
												"id": 277,
												"nodeType": "UncheckedBlock",
												"src": "6100:97:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 270,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 251,
																	"src": "6134:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 271,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 243,
																	"src": "6141:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 274,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 272,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 256,
																		"src": "6150:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 273,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 245,
																		"src": "6169:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6150:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 269,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 532,
																"src": "6125:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 275,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6125:60:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 276,
														"nodeType": "ExpressionStatement",
														"src": "6125:60:0"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 278,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6216:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 249,
												"id": 279,
												"nodeType": "Return",
												"src": "6209:11:0"
											}
										]
									},
									"documentation": {
										"id": 241,
										"nodeType": "StructuredDocumentation",
										"src": "5297:489:0",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 281,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "5801:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5827:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "5819:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5819:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "5844:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "5836:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5836:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5818:42:0"
									},
									"returnParameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "5885:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 247,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5885:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5884:6:0"
									},
									"scope": 598,
									"src": "5792:436:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 357,
										"nodeType": "Block",
										"src": "6776:728:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 297,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 292,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 284,
																"src": "6795:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 295,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6811:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 294,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6803:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 293,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6803:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 296,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6803:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6795:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 298,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6815:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 291,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6787:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6787:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 300,
												"nodeType": "ExpressionStatement",
												"src": "6787:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 302,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 286,
																"src": "6874:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 305,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6888:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 304,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6880:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 303,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6880:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 306,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6880:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6874:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 308,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6892:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 301,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6866:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6866:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 310,
												"nodeType": "ExpressionStatement",
												"src": "6866:64:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 312,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 284,
															"src": "6964:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 313,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 286,
															"src": "6970:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 314,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 288,
															"src": "6974:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 311,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 586,
														"src": "6943:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6943:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 316,
												"nodeType": "ExpressionStatement",
												"src": "6943:38:0"
											},
											{
												"assignments": [
													318
												],
												"declarations": [
													{
														"constant": false,
														"id": 318,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "7002:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 357,
														"src": "6994:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 317,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6994:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 322,
												"initialValue": {
													"baseExpression": {
														"id": 319,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "7016:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 321,
													"indexExpression": {
														"id": 320,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 284,
														"src": "7026:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7016:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6994:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 326,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 324,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 318,
																"src": "7050:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 325,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 288,
																"src": "7065:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7050:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 327,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7073:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 323,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7042:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7042:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 329,
												"nodeType": "ExpressionStatement",
												"src": "7042:72:0"
											},
											{
												"id": 344,
												"nodeType": "UncheckedBlock",
												"src": "7125:278:0",
												"statements": [
													{
														"expression": {
															"id": 336,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 330,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 14,
																	"src": "7150:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 332,
																"indexExpression": {
																	"id": 331,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 284,
																	"src": "7160:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "7150:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 335,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 333,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 318,
																	"src": "7168:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 334,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 288,
																	"src": "7182:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7168:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7150:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 337,
														"nodeType": "ExpressionStatement",
														"src": "7150:38:0"
													},
													{
														"expression": {
															"id": 342,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 338,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 14,
																	"src": "7368:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 340,
																"indexExpression": {
																	"id": 339,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 286,
																	"src": "7378:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "7368:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 341,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 288,
																"src": "7385:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7368:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 343,
														"nodeType": "ExpressionStatement",
														"src": "7368:23:0"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 346,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 284,
															"src": "7429:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 347,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 286,
															"src": "7435:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 348,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 288,
															"src": "7439:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 345,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 610,
														"src": "7420:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7420:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 350,
												"nodeType": "EmitStatement",
												"src": "7415:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 352,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 284,
															"src": "7479:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 353,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 286,
															"src": "7485:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 354,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 288,
															"src": "7489:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 351,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 597,
														"src": "7459:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7459:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 356,
												"nodeType": "ExpressionStatement",
												"src": "7459:37:0"
											}
										]
									},
									"documentation": {
										"id": 282,
										"nodeType": "StructuredDocumentation",
										"src": "6236:456:0",
										"text": " @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
									},
									"id": 358,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "6707:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6725:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "6717:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 283,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6717:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6739:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "6731:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 285,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6731:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6751:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "6743:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6743:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6716:42:0"
									},
									"returnParameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6776:0:0"
									},
									"scope": 598,
									"src": "6698:806:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 414,
										"nodeType": "Block",
										"src": "7856:483:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 372,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 367,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 361,
																"src": "7875:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 370,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7894:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 369,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7886:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 368,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7886:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 371,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7886:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7875:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 373,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7898:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 366,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7867:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7867:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 375,
												"nodeType": "ExpressionStatement",
												"src": "7867:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 379,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7974:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 378,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7966:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 377,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7966:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 380,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7966:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 381,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 361,
															"src": "7978:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 382,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "7987:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 376,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 586,
														"src": "7945:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7945:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 384,
												"nodeType": "ExpressionStatement",
												"src": "7945:49:0"
											},
											{
												"expression": {
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 385,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 22,
														"src": "8007:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 386,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 363,
														"src": "8023:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8007:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 388,
												"nodeType": "ExpressionStatement",
												"src": "8007:22:0"
											},
											{
												"id": 395,
												"nodeType": "UncheckedBlock",
												"src": "8040:178:0",
												"statements": [
													{
														"expression": {
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 389,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 14,
																	"src": "8178:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 391,
																"indexExpression": {
																	"id": 390,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 361,
																	"src": "8188:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8178:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 392,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 363,
																"src": "8200:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8178:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 394,
														"nodeType": "ExpressionStatement",
														"src": "8178:28:0"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 399,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8250:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 398,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8242:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 397,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8242:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 400,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8242:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 401,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 361,
															"src": "8254:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "8263:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 396,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 610,
														"src": "8233:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8233:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 404,
												"nodeType": "EmitStatement",
												"src": "8228:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 408,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8311:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 407,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8303:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 406,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8303:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 409,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8303:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 410,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 361,
															"src": "8315:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 411,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "8324:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 405,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 597,
														"src": "8283:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8283:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 413,
												"nodeType": "ExpressionStatement",
												"src": "8283:48:0"
											}
										]
									},
									"documentation": {
										"id": 359,
										"nodeType": "StructuredDocumentation",
										"src": "7512:273:0",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 415,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7800:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7814:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "7806:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 360,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7806:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7831:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "7823:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 362,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7823:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7805:33:0"
									},
									"returnParameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7856:0:0"
									},
									"scope": 598,
									"src": "7791:548:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 486,
										"nodeType": "Block",
										"src": "8737:610:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 429,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 424,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 418,
																"src": "8756:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 427,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8775:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 426,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8767:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 425,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8767:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 428,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8767:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8756:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 430,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8779:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 423,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8748:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8748:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 432,
												"nodeType": "ExpressionStatement",
												"src": "8748:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 434,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 418,
															"src": "8849:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 437,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8866:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 436,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8858:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 435,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8858:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 438,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8858:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 439,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 420,
															"src": "8870:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 433,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 586,
														"src": "8828:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8828:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 441,
												"nodeType": "ExpressionStatement",
												"src": "8828:49:0"
											},
											{
												"assignments": [
													443
												],
												"declarations": [
													{
														"constant": false,
														"id": 443,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "8898:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 486,
														"src": "8890:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 442,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8890:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 447,
												"initialValue": {
													"baseExpression": {
														"id": 444,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "8915:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 446,
													"indexExpression": {
														"id": 445,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 418,
														"src": "8925:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8915:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8890:43:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 451,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 449,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 443,
																"src": "8952:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 450,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 420,
																"src": "8970:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8952:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 452,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8978:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 448,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8944:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8944:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 454,
												"nodeType": "ExpressionStatement",
												"src": "8944:71:0"
											},
											{
												"id": 467,
												"nodeType": "UncheckedBlock",
												"src": "9026:198:0",
												"statements": [
													{
														"expression": {
															"id": 461,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 455,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 14,
																	"src": "9051:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 457,
																"indexExpression": {
																	"id": 456,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 418,
																	"src": "9061:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "9051:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 460,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 458,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 443,
																	"src": "9072:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 459,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 420,
																	"src": "9089:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9072:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9051:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 462,
														"nodeType": "ExpressionStatement",
														"src": "9051:44:0"
													},
													{
														"expression": {
															"id": 465,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 463,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "9190:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"id": 464,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 420,
																"src": "9206:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9190:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 466,
														"nodeType": "ExpressionStatement",
														"src": "9190:22:0"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 469,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 418,
															"src": "9250:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 472,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9267:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 471,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9259:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 470,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9259:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9259:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 474,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 420,
															"src": "9271:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 468,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 610,
														"src": "9241:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9241:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 476,
												"nodeType": "EmitStatement",
												"src": "9236:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 478,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 418,
															"src": "9311:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 481,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9328:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 480,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9320:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 479,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9320:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 482,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9320:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 483,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 420,
															"src": "9332:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 477,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 597,
														"src": "9291:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9291:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 485,
												"nodeType": "ExpressionStatement",
												"src": "9291:48:0"
											}
										]
									},
									"documentation": {
										"id": 416,
										"nodeType": "StructuredDocumentation",
										"src": "8347:319:0",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 487,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8681:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8695:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "8687:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 417,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8687:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8712:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "8704:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 419,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8704:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8686:33:0"
									},
									"returnParameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8737:0:0"
									},
									"scope": 598,
									"src": "8672:675:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 531,
										"nodeType": "Block",
										"src": "9868:263:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 498,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 490,
																"src": "9887:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 501,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9904:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 500,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9896:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 499,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9896:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9896:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9887:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 504,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9908:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 497,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9879:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9879:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 506,
												"nodeType": "ExpressionStatement",
												"src": "9879:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 513,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 508,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 492,
																"src": "9966:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 511,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9985:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 510,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9977:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 509,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9977:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 512,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9977:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9966:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 514,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9989:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 507,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9958:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9958:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 516,
												"nodeType": "ExpressionStatement",
												"src": "9958:68:0"
											},
											{
												"expression": {
													"id": 523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 517,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 20,
																"src": "10039:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 520,
															"indexExpression": {
																"id": 518,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 490,
																"src": "10051:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10039:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 521,
														"indexExpression": {
															"id": 519,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 492,
															"src": "10058:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10039:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 522,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "10069:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10039:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 524,
												"nodeType": "ExpressionStatement",
												"src": "10039:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 526,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 490,
															"src": "10100:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 527,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 492,
															"src": "10107:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 528,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "10116:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 525,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 619,
														"src": "10091:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10091:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 530,
												"nodeType": "EmitStatement",
												"src": "10086:37:0"
											}
										]
									},
									"documentation": {
										"id": 488,
										"nodeType": "StructuredDocumentation",
										"src": "9355:424:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 532,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9794:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9811:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "9803:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 489,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9803:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9826:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "9818:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 491,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9818:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9843:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "9835:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 493,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9835:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9802:48:0"
									},
									"returnParameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9868:0:0"
									},
									"scope": 598,
									"src": "9785:346:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 574,
										"nodeType": "Block",
										"src": "10512:329:0",
										"statements": [
											{
												"assignments": [
													543
												],
												"declarations": [
													{
														"constant": false,
														"id": 543,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10531:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 574,
														"src": "10523:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 542,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10523:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 548,
												"initialValue": {
													"arguments": [
														{
															"id": 545,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 535,
															"src": "10560:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 546,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 537,
															"src": "10567:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 544,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 153,
														"src": "10550:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10550:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10523:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 549,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 543,
														"src": "10590:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 552,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10615:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 551,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10615:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 550,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10610:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 553,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10610:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 554,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10610:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10590:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 573,
												"nodeType": "IfStatement",
												"src": "10586:248:0",
												"trueBody": {
													"id": 572,
													"nodeType": "Block",
													"src": "10629:205:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 559,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 557,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 543,
																			"src": "10652:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 558,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 539,
																			"src": "10672:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "10652:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 560,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10680:31:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		},
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		}
																	],
																	"id": 556,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "10644:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 561,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10644:68:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 562,
															"nodeType": "ExpressionStatement",
															"src": "10644:68:0"
														},
														{
															"id": 571,
															"nodeType": "UncheckedBlock",
															"src": "10727:96:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 564,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 535,
																				"src": "10765:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 565,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 537,
																				"src": "10772:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 568,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 566,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 543,
																					"src": "10781:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 567,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 539,
																					"src": "10800:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10781:25:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 563,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 532,
																			"src": "10756:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 569,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10756:51:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 570,
																	"nodeType": "ExpressionStatement",
																	"src": "10756:51:0"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 533,
										"nodeType": "StructuredDocumentation",
										"src": "10139:277:0",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
									},
									"id": 575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10431:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10455:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "10447:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 534,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10447:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10470:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "10462:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 536,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10462:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10487:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "10479:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 538,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10479:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10446:48:0"
									},
									"returnParameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10512:0:0"
									},
									"scope": 598,
									"src": "10422:419:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 585,
										"nodeType": "Block",
										"src": "11530:2:0",
										"statements": []
									},
									"documentation": {
										"id": 576,
										"nodeType": "StructuredDocumentation",
										"src": "10849:586:0",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 586,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "11450:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11479:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 586,
												"src": "11471:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11471:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11493:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 586,
												"src": "11485:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 579,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11485:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11505:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 586,
												"src": "11497:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 581,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11497:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11470:42:0"
									},
									"returnParameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11530:0:0"
									},
									"scope": 598,
									"src": "11441:91:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 596,
										"nodeType": "Block",
										"src": "12224:2:0",
										"statements": []
									},
									"documentation": {
										"id": 587,
										"nodeType": "StructuredDocumentation",
										"src": "11540:590:0",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 597,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "12145:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12173:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "12165:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 588,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12165:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12187:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "12179:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 590,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12179:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12199:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "12191:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 592,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12191:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12164:42:0"
									},
									"returnParameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12224:0:0"
									},
									"scope": 598,
									"src": "12136:90:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 599,
							"src": "484:11745:0"
						}
					],
					"src": "108:12121:0"
				},
				"id": 0
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							676
						]
					},
					"id": 677,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 600,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 601,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 676,
							"linearizedBaseContracts": [
								676
							],
							"name": "IERC20",
							"nameLocation": "212:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 602,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 610,
									"name": "Transfer",
									"nameLocation": "394:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 604,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "403:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 603,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 606,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "425:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 608,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "445:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 607,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:1"
									},
									"src": "388:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 611,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 619,
									"name": "Approval",
									"nameLocation": "625:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 613,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "634:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 612,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 615,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "657:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 617,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "682:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 616,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:1"
									},
									"src": "619:78:1"
								},
								{
									"documentation": {
										"id": 620,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 625,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 622,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 676,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 626,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 633,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "931:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 627,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:1"
									},
									"returnParameters": {
										"id": 632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "971:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 630,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:1"
									},
									"scope": 676,
									"src": "912:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 634,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 643,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 643,
												"src": "1211:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 643,
												"src": "1223:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 637,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:1"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 643,
												"src": "1257:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 640,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:1"
									},
									"scope": 676,
									"src": "1193:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 644,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 653,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 646,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "1557:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 645,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "1572:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 647,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:1"
									},
									"returnParameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "1612:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:1"
									},
									"scope": 676,
									"src": "1538:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 654,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 663,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "2291:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 655,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "2308:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:1"
									},
									"returnParameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "2342:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 660,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:1"
									},
									"scope": 676,
									"src": "2274:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 675,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2676:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "2668:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2668:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2690:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "2682:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2682:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2702:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "2694:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2694:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:42:1"
									},
									"returnParameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "2728:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 672,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2728:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2727:6:1"
									},
									"scope": 676,
									"src": "2646:88:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 677,
							"src": "202:2534:1"
						}
					],
					"src": "106:2631:1"
				},
				"id": 1
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							676
						],
						"IERC20Metadata": [
							701
						]
					},
					"id": 702,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 678,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:2"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 679,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 702,
							"sourceUnit": 677,
							"src": "135:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 681,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 676,
										"src": "305:6:2"
									},
									"id": 682,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:2"
								}
							],
							"contractDependencies": [
								676
							],
							"contractKind": "interface",
							"documentation": {
								"id": 680,
								"nodeType": "StructuredDocumentation",
								"src": "160:116:2",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 701,
							"linearizedBaseContracts": [
								701,
								676
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 683,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 688,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:2"
									},
									"returnParameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "416:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 685,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:2"
									},
									"scope": 701,
									"src": "377:54:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 689,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:2",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 694,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:2"
									},
									"returnParameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 694,
												"src": "539:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 691,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:2"
									},
									"scope": 701,
									"src": "498:56:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 695,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:2",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 700,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:2"
									},
									"returnParameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 698,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "673:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 697,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:2"
									},
									"scope": 701,
									"src": "630:50:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 702,
							"src": "277:405:2"
						}
					],
					"src": "110:573:2"
				},
				"id": 2
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							723
						]
					},
					"id": 724,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 703,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 704,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 723,
							"linearizedBaseContracts": [
								723
							],
							"name": "Context",
							"nameLocation": "626:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 712,
										"nodeType": "Block",
										"src": "702:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 709,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 708,
												"id": 711,
												"nodeType": "Return",
												"src": "712:17:3"
											}
										]
									},
									"id": 713,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:3"
									},
									"returnParameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "693:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 706,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:3"
									},
									"scope": 723,
									"src": "640:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 721,
										"nodeType": "Block",
										"src": "809:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 718,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 717,
												"id": 720,
												"nodeType": "Return",
												"src": "819:15:3"
											}
										]
									},
									"id": 722,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:3"
									},
									"returnParameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "793:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 715,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:3"
									},
									"scope": 723,
									"src": "742:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 724,
							"src": "608:235:3"
						}
					],
					"src": "86:758:3"
				},
				"id": 3
			}
		}
	}
}